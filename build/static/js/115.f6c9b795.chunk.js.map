{"version":3,"sources":["../node_modules/antd/es/notification/index.js","routes/components/feedback/Notification/Basic.js","routes/components/feedback/Notification/Duration.js","routes/components/feedback/Notification/WithIcon.js","routes/components/feedback/Notification/CustomClose.js","routes/components/feedback/Notification/CustomizeIcon.js","routes/components/feedback/Notification/Placement.js","routes/components/feedback/Notification/CustomizeStyle.js","routes/components/feedback/Notification/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultGetContainer","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","getPlacementStyle","placement","style","top","undefined","bottom","left","right","typeToIcon","success","info","error","warning","api","open","args","outerPrefixCls","prefixCls","concat","duration","iconNode","icon","react","className","type","iconType","autoMarginTag","description","_ref","callback","_ref$placement","_ref$getContainer","getContainer","cacheKey","es","newInstance","closeIcon","notification","getNotificationInstance","notice","content","message","btn","closable","onClose","onClick","close","keys","forEach","removeNotice","config","options","destroy","warn","es_notification","openNotification","Basic","react_default","a","createElement","card","title","es_button","Duration","openNotificationWithIcon","WithIcon","console","log","Date","now","size","CustomClose","color","CustomizeIcon","Option","Select","Placement","es_select","defaultValue","width","onChange","val","map","value","marginLeft","CustomizeStyle","Notification","row","col","lg","md","sm","xs","Notification_Basic","Notification_Duration","Notification_WithIcon","Notification_CustomClose","Notification_CustomizeIcon","Notification_Placement","Notification_CustomizeStyle","Component"],"mappings":"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","file":"static/js/115.f6c9b795.chunk.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(_ref, callback) {\n  var prefixCls = _ref.prefixCls,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? defaultPlacement : _ref$placement,\n      _ref$getContainer = _ref.getContainer,\n      getContainer = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer,\n      top = _ref.top,\n      bottom = _ref.bottom;\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    className: \"\".concat(prefixCls, \"-\").concat(placement),\n    style: getPlacementStyle(placement, top, bottom),\n    getContainer: getContainer,\n    closeIcon: React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-close-icon\"),\n      type: \"close\"\n    })\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\n\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n};\n\nfunction notice(args) {\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    var iconType = typeToIcon[args.type];\n    iconNode = React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type),\n      type: iconType\n    });\n  }\n\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  var placement = args.placement,\n      top = args.top,\n      bottom = args.bottom,\n      getContainer = args.getContainer;\n  getNotificationInstance({\n    prefixCls: outerPrefixCls,\n    placement: placement,\n    top: top,\n    bottom: bottom,\n    getContainer: getContainer\n  }, function (notification) {\n    notification.notice({\n      content: React.createElement(\"div\", {\n        className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n      }, iconNode, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, autoMarginTag, args.message), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, args.description), args.btn ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-btn\")\n      }, args.btn) : null),\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      className: args.className\n    });\n  });\n}\n\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends(_extends({}, args), {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\nexport default api;","import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst openNotification = () => {\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'This is the content of the Notification. This is the content of the Notification. This is the content of the Notification.',\r\n  });\r\n};\r\n\r\nconst Basic = () => {\r\n  return (\r\n    <Card title=\"Basic\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>Open the notification box</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst openNotification = () => {\r\n  const args = {\r\n    message: 'Notification Title',\r\n    description: 'I will never close automatically. I will be close automatically. I will never close automatically.',\r\n    duration: 0,\r\n  };\r\n  notification.open(args);\r\n};\r\n\r\nconst Duration = () => {\r\n  return (\r\n    <Card title=\"Duration\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>Open the notification box</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Duration;\r\n","import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst openNotificationWithIcon = (type) => {\r\n  notification[type]({\r\n    message: 'Notification Title',\r\n    description: 'This is the content of the Notification. This is the content of the Notification. This is the content of the Notification.',\r\n  });\r\n};\r\n\r\nconst WithIcon = () => {\r\n  return (\r\n    <Card title=\"With Icon\" className=\"gx-card\">\r\n      <Button onClick={() => openNotificationWithIcon('success')}>Success</Button>\r\n      <Button onClick={() => openNotificationWithIcon('info')}>Info</Button>\r\n      <Button onClick={() => openNotificationWithIcon('warning')}>Warning</Button>\r\n      <Button onClick={() => openNotificationWithIcon('error')}>Error</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WithIcon;\r\n","import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst close = () => {\r\n  console.log('Notification was closed. Either the close button was clicked or duration time elapsed.');\r\n};\r\n\r\nconst openNotification = () => {\r\n  const key = `open${Date.now()}`;\r\n  const btn = (\r\n    <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\r\n      Confirm\r\n    </Button>\r\n  );\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'A function will be be called after the Notification is closed (automatically after the \"duration\" time of manually).',\r\n    btn,\r\n    key,\r\n    onClose: close,\r\n  });\r\n};\r\n\r\nconst CustomClose = () => {\r\n  return (\r\n    <Card title=\"Custom Close\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>\r\n        Open the notification box\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomClose;\r\n","import React from \"react\";\r\nimport {Button, Card, Icon, notification} from \"antd\";\r\n\r\nconst openNotification = () => {\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'This is the content of the Notification. This is the content of the Notification. This is the content of the Notification.',\r\n    icon: <Icon type=\"smile-circle\" style={{color: '#108ee9'}}/>,\r\n  });\r\n};\r\n\r\nconst CustomizeIcon = () => {\r\n  return (\r\n    <Card title=\"Customize Icon\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>Open the notification box</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomizeIcon;\r\n","import React from \"react\";\r\nimport {Button, Card, notification, Select} from \"antd\";\r\n\r\nconst {Option} = Select;\r\nconst options = ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'];\r\nconst openNotification = () => {\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'This is the content of the Notification. This is the content of the Notification. This is the content of the Notification.',\r\n  });\r\n};\r\n\r\nconst Placement = () => {\r\n  return (\r\n    <Card title=\"Placement\" className=\"gx-card\">\r\n      <Select className=\"gx-mb-2 gx-mr-2 gx-vertical-align-top\"\r\n              defaultValue=\"topLeft\"\r\n              style={{width: 120}}\r\n              onChange={(val) => {\r\n                notification.config({\r\n                  placement: val,\r\n                });\r\n              }}\r\n      >\r\n        {options.map(val => <Option key={val} value={val}>{val}</Option>)}\r\n      </Select>\r\n      <Button\r\n        type=\"primary\" className=\"gx-mb-2\"\r\n        onClick={openNotification}\r\n      >\r\n        Open the notification box\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Placement;\r\n","import React from \"react\";\r\nimport {Button, Card, notification} from \"antd\";\r\n\r\nconst openNotification = () => {\r\n  notification.open({\r\n    message: 'Notification Title',\r\n    description: 'This is the content of the Notification. This is the content of the Notification. This is the content of the Notification.',\r\n    style: {\r\n      width: 600,\r\n      marginLeft: 335 - 600,\r\n    },\r\n  });\r\n};\r\n\r\nconst CustomizeStyle = () => {\r\n  return (\r\n    <Card title=\"Placement\" className=\"gx-card\">\r\n      <Button type=\"primary\" onClick={openNotification}>Open the notification box</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomizeStyle;\r\n","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Duration from \"./Duration\";\r\nimport WithIcon from \"./WithIcon\";\r\nimport CustomClose from \"./CustomClose\";\r\nimport CustomizeIcon from \"./CustomizeIcon\";\r\nimport Placement from \"./Placement\";\r\nimport CustomizeStyle from \"./CustomizeStyle\";\r\n\r\n\r\nclass Notification extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Basic/>\r\n          <Duration/>\r\n          <WithIcon/>\r\n          <CustomClose/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <CustomizeIcon/>\r\n          <Placement/>\r\n          <CustomizeStyle/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Notification;\r\n"],"sourceRoot":""}