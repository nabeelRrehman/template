{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/tree/util.js","../node_modules/antd/es/tree/DirectoryTree.js","../node_modules/antd/es/tree/Tree.js","../node_modules/antd/es/tree/index.js","routes/components/dataDisplay/Tree/Basic.js","routes/components/dataDisplay/Tree/BasicControl.js","routes/components/dataDisplay/Tree/Dragable.js","routes/components/dataDisplay/Tree/LoadData.js","routes/components/dataDisplay/Tree/Searchable.js","routes/components/dataDisplay/Tree/TreeLine.js","routes/components/dataDisplay/Tree/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","Record","traverseNodesKey","rootChildren","callback","util","forEach","node","key","children","props","calcRangeKeys","expandedKeys","startKey","endKey","keys","record","None","End","matchKey","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","index","splice","_typeof","obj","constructor","DirectoryTree_toConsumableArray","DirectoryTree_arrayWithoutHoles","DirectoryTree_iterableToArray","DirectoryTree_nonIterableSpread","_extends","assign","target","arguments","source","hasOwnProperty","apply","this","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","__rest","s","e","t","getOwnPropertySymbols","propertyIsEnumerable","getIcon","isLeaf","expanded","react","icon","type","DirectoryTree_DirectoryTree","_React$Component","DirectoryTree","_this","instance","Constructor","_classCallCheck","onExpand","info","setUncontrolledState","onClick","event","_this$props","expandAction","onDebounceExpand","onDoubleClick","_this$props2","onSelect","newSelectedKeys","_this$props3","multiple","_this$state$expandedK","state","nativeEvent","_node$props$eventKey","eventKey","newState","newEvent","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","lastSelectedKey","cachedSelectedKeys","selectedNodes","Set","concat","selectedKeys","setTreeRef","tree","expandFolderNode","onNodeExpand","omit_js_es","setState","renderDirectoryTree","_ref","getPrefixCls","_a","customizePrefixCls","prefixCls","className","_this$state","connectClassName","classnames_default","Tree_Tree","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","defaultSelectedKeys","treeData","getFullKeyListByTreeData","undefined","item","getFullKeyList","debounce_default","leading","protoProps","staticProps","subClass","superClass","create","value","_inherits","nextProps","context","defaultProps","showIcon","react_lifecycles_compat_es","tree_DirectoryTree","Tree_typeof","Tree_extends","_defineProperty","Tree_defineProperties","Tree_getPrototypeOf","Tree_assertThisInitialized","Tree_setPrototypeOf","Tree","Tree_classCallCheck","renderSwitcherIcon","switcherIcon","loading","showLine","switcherCls","switcherOriginCls","theme","renderTree","_ref2","_classNames","_switcherIcon","blockNode","checkable","es","nodeProps","Tree_inherits","TreeNode","motion","motionAppear","Basic","console","log","onCheck","checkedKeys","react_default","a","createElement","card","title","defaultCheckedKeys","disabled","disableCheckbox","style","color","React","Component","BasicControl","autoExpandParent","renderTreeNodes","data","map","BasicControl_TreeNode","dataRef","gData","generateData","_level","_preKey","_tns","preKey","tns","level","Dragable","onDragEnter","onDrop","dragObj","ar","dropKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","toConsumableArray","dropToGap","draggable","Dragable_TreeNode","LoadData","onLoadData","treeNode","Promise","resolve","setTimeout","LoadData_TreeNode","loadData","Search","Input","dataList","generateList","getParentKey","parentKey","some","Searchable","searchValue","onChange","filter","marginBottom","placeholder","beforeStr","substr","afterStr","Searchable_TreeNode","TreeLine","TreeLine_TreeNode","row","col","lg","md","sm","xs","Tree_Basic","Tree_BasicControl","Tree_Dragable","Tree_LoadData","Tree_Searchable","Tree_TreeLine"],"mappings":"4FAGe,SAAAA,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GFGmCQ,CAAef,IGJnC,WACf,UAAAgB,UAAA,mDHG2DC,GAJ3DC,EAAAC,EAAAC,EAAA,sBAAArB,kDIuBAsB,qJAvBA,SAAAtB,EAAAC,GACA,OAWA,SAAAA,GACA,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GAjBAE,CAAAN,IAOA,SAAAO,GACA,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GARAQ,CAAAf,IAGA,WACA,UAAAgB,UAAA,mDAJAC,GA+BA,SAAAK,EAAAC,EAAAC,IACiBd,OAAAe,EAAA,EAAAf,CAAea,IAAA,IAWhCG,QATA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,IACAC,EAAAF,EAAAG,MAAAD,UAEA,IAAAL,EAAAI,EAAAD,IACAL,EAAAO,EAAAL,KAeO,SAAAO,EAAAR,EAAAS,EAAAC,EAAAC,GACP,IAAAC,EAAA,GACAC,EAAAf,EAAAgB,KAEA,GAAAJ,OAAAC,EACA,OAAAD,GAGA,IAAAA,IAAAC,EACA,SAiCA,OA1BAZ,EAAAC,EAAA,SAAAK,GACA,GAAAQ,IAAAf,EAAAiB,IACA,SAGA,GATA,SAAAV,GACA,OAAAA,IAAAK,GAAAL,IAAAM,EAQAK,CAAAX,IAIA,GAFAO,EAAAK,KAAAZ,GAEAQ,IAAAf,EAAAgB,KACAD,EAAAf,EAAAoB,WACO,GAAAL,IAAAf,EAAAoB,MAEP,OADAL,EAAAf,EAAAiB,KACA,OAEKF,IAAAf,EAAAoB,OAELN,EAAAK,KAAAZ,GAGA,WAAAI,EAAAU,QAAAd,KAMAO,EAEO,SAAAQ,EAAApB,EAAAY,GACP,IAAAS,EAAA7C,EAAAoC,GAEAU,EAAA,GAWA,OAVAvB,EAAAC,EAAA,SAAAK,EAAAD,GACA,IAAAmB,EAAAF,EAAAF,QAAAd,GAOA,OALA,IAAAkB,IACAD,EAAAL,KAAAb,GACAiB,EAAAG,OAAAD,EAAA,MAGAF,EAAAvC,SAEAwC,GAxFA,SAAAxB,GACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,aAHA,CAICA,MAAA,iBC7BD,SAAA2B,EAAAC,GAWA,OATAD,EADA,oBAAAxC,QAAA,kBAAAA,OAAAC,SACA,SAAAwC,GACA,cAAAA,GAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAzC,QAAAyC,EAAAC,cAAA1C,QAAAyC,IAAAzC,OAAAG,UAAA,gBAAAsC,IAIAA,GAGA,SAASE,EAAkBnD,GAC3B,OAWA,SAA2BA,GAC3B,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GAjBSgD,CAAkBpD,IAO3B,SAAyBO,GACzB,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GARoC8C,CAAgBrD,IAGpD,WACA,UAAAgB,UAAA,mDAJ6DsC,GAqB7D,SAAAC,IAeA,OAdAA,EAAA7C,OAAA8C,QAAA,SAAAC,GACA,QAAAtD,EAAA,EAAmBA,EAAAuD,UAAArD,OAAsBF,IAAA,CACzC,IAAAwD,EAAAD,UAAAvD,GAEA,QAAAyB,KAAA+B,EACAjD,OAAAC,UAAAiD,eAAA/C,KAAA8C,EAAA/B,KACA6B,EAAA7B,GAAA+B,EAAA/B,IAKA,OAAA6B,IAGAI,MAAAC,KAAAJ,WASA,SAAAK,EAAAN,EAAA3B,GACA,QAAA3B,EAAA,EAAiBA,EAAA2B,EAAAzB,OAAkBF,IAAA,CACnC,IAAA6D,EAAAlC,EAAA3B,GACA6D,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAzD,OAAA0D,eAAAX,EAAAO,EAAApC,IAAAoC,IAUA,SAAAK,EAAAC,EAAAzD,GACA,OAAAA,GAAA,WAAAmC,EAAAnC,IAAA,oBAAAA,EAOA,SAAAyD,GACA,YAAAA,EACA,UAAAC,eAAA,6DAGA,OAAAD,EARAE,CAAAF,GAHAzD,EAcA,SAAA4D,EAAAC,GAIA,OAHAD,EAAA/D,OAAAiE,eAAAjE,OAAAkE,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAnE,OAAAkE,eAAAF,KAEAA,GAkBA,SAAAI,EAAAJ,EAAAK,GAMA,OALAD,EAAApE,OAAAiE,gBAAA,SAAAD,EAAAK,GAEA,OADAL,EAAAG,UAAAE,EACAL,IAGAA,EAAAK,GAGA,IAAAC,EAAyB,SAAAC,EAAAC,GACzB,IAAAC,EAAA,GAEA,QAAAJ,KAAAE,EACAvE,OAAAC,UAAAiD,eAAA/C,KAAAoE,EAAAF,IAAAG,EAAAxC,QAAAqC,GAAA,IAAAI,EAAAJ,GAAAE,EAAAF,IAGA,SAAAE,GAAA,oBAAAvE,OAAA0E,sBAAA,KAAAjF,EAAA,MAAA4E,EAAArE,OAAA0E,sBAAAH,GAA2H9E,EAAA4E,EAAA1E,OAAcF,IACzI+E,EAAAxC,QAAAqC,EAAA5E,IAAA,GAAAO,OAAAC,UAAA0E,qBAAAxE,KAAAoE,EAAAF,EAAA5E,MAAAgF,EAAAJ,EAAA5E,IAAA8E,EAAAF,EAAA5E,KAEA,OAAAgF,GAcA,SAAAG,EAAAxD,GACA,IAAAyD,EAAAzD,EAAAyD,OACAC,EAAA1D,EAAA0D,SAEA,OAAAD,EACWE,EAAA,cAAoBC,EAAA,EAAI,CACnCC,KAAA,SAISF,EAAA,cAAoBC,EAAA,EAAI,CACjCC,KAAAH,EAAA,yBAIA,IAAII,EAEJ,SAAAC,GAGA,SAAAC,EAAAhE,GACA,IAAAiE,GAlHA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAjF,UAAA,qCAkHAkF,CAAApC,KAAAgC,IAEAC,EAAA1B,EAAAP,KAAAW,EAAAqB,GAAAjF,KAAAiD,KAAAhC,KAEAqE,SAAA,SAAAnE,EAAAoE,GACA,IAAAD,EAAAJ,EAAAjE,MAAAqE,SAOA,GALAJ,EAAAM,qBAAA,CACArE,iBAIAmE,EACA,OAAAA,EAAAnE,EAAAoE,IAMAL,EAAAO,QAAA,SAAAC,EAAA5E,GACA,IAAA6E,EAAAT,EAAAjE,MACAwE,EAAAE,EAAAF,QAGA,UAFAE,EAAAC,cAGAV,EAAAW,iBAAAH,EAAA5E,GAGA2E,GACAA,EAAAC,EAAA5E,IAIAoE,EAAAY,cAAA,SAAAJ,EAAA5E,GACA,IAAAiF,EAAAb,EAAAjE,MACA6E,EAAAC,EAAAD,cAGA,gBAFAC,EAAAH,cAGAV,EAAAW,iBAAAH,EAAA5E,GAGAgF,GACAA,EAAAJ,EAAA5E,IAIAoE,EAAAc,SAAA,SAAA1E,EAAAoE,GACA,IAoBAO,EApBAC,EAAAhB,EAAAjE,MACA+E,EAAAE,EAAAF,SACAG,EAAAD,EAAAC,SACAnF,EAAAkF,EAAAlF,SACAoF,EAAAlB,EAAAmB,MAAAlF,aACAA,OAAA,IAAAiF,EAAA,GAAAA,EACAtF,EAAA4E,EAAA5E,KACAwF,EAAAZ,EAAAY,YACAC,EAAAzF,EAAAG,MAAAuF,SACAA,OAAA,IAAAD,EAAA,GAAAA,EACAE,EAAA,GAEAC,EAAAhE,IAAA,GAAyCgD,GAAA,CACzCiB,UAAA,IAIAC,EAAAN,EAAAO,SAAAP,EAAAQ,QACAC,EAAAT,EAAAU,SAIAb,GAAAS,GAEAX,EAAA3E,EACA4D,EAAA+B,gBAAAT,EACAtB,EAAAgC,mBAAAjB,EACAS,EAAAS,cAAiCrF,EAA2Bd,EAAAiF,IACrDE,GAAAY,GAEPd,EAAA7G,MAAAa,KAAA,IAAAmH,IAAA,GAAAC,OAAuD/E,EAAkB4C,EAAAgC,oBAAA,IAAkC5E,EAAmBpB,EAAaF,EAAAG,EAAAqF,EAAAtB,EAAA+B,qBAC3IP,EAAAS,cAAiCrF,EAA2Bd,EAAAiF,KAG5DA,EAAA,CAAAO,GACAtB,EAAA+B,gBAAAT,EACAtB,EAAAgC,mBAAAjB,EACAS,EAAAS,cAAA,CAAAzB,EAAA5E,OAGA2F,EAAAa,aAAArB,EAEAD,GACAA,EAAAC,EAAAS,GAGAxB,EAAAM,qBAAAiB,IAGAvB,EAAAqC,WAAA,SAAAzG,GACAoE,EAAAsC,KAAA1G,GAGAoE,EAAAuC,iBAAA,SAAA/B,EAAA5E,GACAA,EAAAG,MAAAyD,QAEAgB,EAAAsB,UAAAtB,EAAAoB,SAAApB,EAAAmB,SAKA3B,EAAAsC,UAGAE,aAAAhC,EAAA5E,IAGAoE,EAAAM,qBAAA,SAAAa,GACA,IAAAI,EAAqB5G,OAAA8H,EAAA,QAAA9H,CAAIwG,EAAAxG,OAAAyB,KAAA4D,EAAAjE,QAEzBpB,OAAAyB,KAAAmF,GAAAjH,QACA0F,EAAA0C,SAAAnB,IAIAvB,EAAA2C,oBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,aAEAC,EAAA9C,EAAAjE,MACAgH,EAAAD,EAAAE,UACAC,EAAAH,EAAAG,UACAlH,EAAAkD,EAAA6D,EAAA,2BAEAI,EAAAlD,EAAAmB,MACAlF,EAAAiH,EAAAjH,aACAmG,EAAAc,EAAAd,aACAY,EAAAH,EAAA,OAAAE,GACAI,EAA6BC,IAAU,GAAAjB,OAAAa,EAAA,cAAAC,GACvC,OAAavD,EAAA,cAAoB2D,EAAI7F,EAAA,CACrCmC,KAAAJ,EACA+D,IAAAtD,EAAAqC,YACOtG,EAAA,CACPiH,YACAC,UAAAE,EACAlH,eACAmG,eACAtB,SAAAd,EAAAc,SACAP,QAAAP,EAAAO,QACAK,cAAAZ,EAAAY,cACAR,SAAAJ,EAAAI,aAIA,IAAAmD,EAAAxH,EAAAwH,iBACAC,EAAAzH,EAAAyH,oBACAvH,EAAAF,EAAAE,aACAwH,EAAA1H,EAAA0H,oBACA3H,EAAAC,EAAAD,SAGA4H,EADgC/I,OAAAe,EAAA,EAAAf,CAAqBmB,GACrD4H,YAsBA,OAnBA1D,EAAAmB,MAAA,CACAiB,aAAArG,EAAAqG,cAAArG,EAAA4H,qBAAA,IAGAJ,EACAxH,EAAA6H,SACA5D,EAAAmB,MAAAlF,aD9NO,SAAA4H,EAAAD,GACP,IAAAxH,EAAAuB,UAAArD,OAAA,QAAAwJ,IAAAnG,UAAA,GAAAA,UAAA,MASA,OARAiG,GAAA,IAAAjI,QAAA,SAAAoI,GACAA,EAAAjI,UACAM,EAAAK,KAAAsH,EAAAlI,KACAO,EAAA+F,OAAA0B,EAAAE,EAAAjI,SAAAM,KAEAA,EAAAK,KAAAsH,EAAAlI,OAGAO,ECoNmCyH,CAAwB9H,EAAA6H,UAE3D5D,EAAAmB,MAAAlF,aDpSO,SAAAH,GACP,IACA4H,EAD8B/I,OAAAe,EAAA,EAAAf,CAAqBmB,GACnD4H,YAEA,OAAA/I,OAAAyB,KAAAsH,GCgSmCM,CAAcjI,EAAAD,UAGjDkE,EAAAmB,MAAAlF,aADKuH,EAC4B7I,OAAAe,EAAA,EAAAf,CAAmBsB,GAAAwH,EAAAC,GAEpDzH,GAAAwH,EAGAzD,EAAAW,iBAA6BsD,IAAQjE,EAAAuC,iBAAA,KACrC2B,SAAA,IAEAlE,EAxRA,IAAAE,EAAAiE,EAAAC,EAiTA,OApRA,SAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAArJ,UAAA,sDAGAoJ,EAAAzJ,UAAAD,OAAA4J,OAAAD,KAAA1J,UAAA,CACAuC,YAAA,CACAqH,MAAAH,EACAjG,UAAA,EACAD,cAAA,KAGAmG,GAAAvF,EAAAsF,EAAAC,GAsDAG,CAAA1E,EAmNEL,EAAA,cAlTFQ,EA2RAH,EA3RAqE,EAgSG,EACHvI,IAAA,2BACA2I,MAAA,SAAAE,GACA,IAAAnD,EAAA,GAUA,MARA,iBAAAmD,IACAnD,EAAAtF,aAAAyI,EAAAzI,cAGA,iBAAAyI,IACAnD,EAAAa,aAAAsC,EAAAtC,cAGAb,MA7SA4C,EA2RA,EACAtI,IAAA,SACA2I,MAAA,WACA,OAAa9E,EAAA,cAAoBiF,EAAA,EAAc,KAAA5G,KAAA4E,0BA7R/C3E,EAAAkC,EAAAtF,UAAAuJ,GACAC,GAAApG,EAAAkC,EAAAkE,GA+SArE,EAnNA,GAsNAF,EAAa+E,aAAA,CACbC,UAAA,EACAnE,aAAA,SAEA/F,OAAAmK,EAAA,SAAAnK,CAASkF,GACM,IAAAkF,EAAA,WC/Xf,SAASC,EAAO9H,GAWhB,OATI8H,EADJ,oBAAAvK,QAAA,kBAAAA,OAAAC,SACW,SAAAwC,GACX,cAAAA,GAGW,SAAAA,GACX,OAAAA,GAAA,oBAAAzC,QAAAyC,EAAAC,cAAA1C,QAAAyC,IAAAzC,OAAAG,UAAA,gBAAAsC,IAIgBA,GAGhB,SAAS+H,IAeT,OAdEA,EAAQtK,OAAA8C,QAAA,SAAAC,GACV,QAAAtD,EAAA,EAAmBA,EAAAuD,UAAArD,OAAsBF,IAAA,CACzC,IAAAwD,EAAAD,UAAAvD,GAEA,QAAAyB,KAAA+B,EACAjD,OAAAC,UAAAiD,eAAA/C,KAAA8C,EAAA/B,KACA6B,EAAA7B,GAAA+B,EAAA/B,IAKA,OAAA6B,IAGiBI,MAAAC,KAAAJ,WAGjB,SAAAuH,EAAAhI,EAAArB,EAAA2I,GAYA,OAXA3I,KAAAqB,EACAvC,OAAA0D,eAAAnB,EAAArB,EAAA,CACA2I,QACAtG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAlB,EAAArB,GAAA2I,EAGAtH,EASA,SAASiI,EAAiBzH,EAAA3B,GAC1B,QAAA3B,EAAA,EAAiBA,EAAA2B,EAAAzB,OAAkBF,IAAA,CACnC,IAAA6D,EAAAlC,EAAA3B,GACA6D,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAzD,OAAA0D,eAAAX,EAAAO,EAAApC,IAAAoC,IAkBA,SAASmH,EAAezG,GAIxB,OAHEyG,EAAezK,OAAAiE,eAAAjE,OAAAkE,eAAA,SAAAF,GACjB,OAAAA,EAAAG,WAAAnE,OAAAkE,eAAAF,KAEwBA,GAGxB,SAAS0G,EAAsB9G,GAC/B,YAAAA,EACA,UAAAC,eAAA,6DAGA,OAAAD,EAkBA,SAAS+G,EAAe3G,EAAAK,GAMxB,OALEsG,EAAe3K,OAAAiE,gBAAA,SAAAD,EAAAK,GAEjB,OADAL,EAAAG,UAAAE,EACAL,IAGwBA,EAAAK,GAWxB,IAAIqE,EAEJ,SAAAvD,GAGA,SAAAyF,IACA,IAAAvF,EA7DmCzB,EAAAzD,EAqJnC,OA3KA,SAAwBmF,EAAAC,GACxB,KAAAD,aAAAC,GACA,UAAAjF,UAAA,qCAmFIuK,CAAezH,KAAAwH,GA/DgBhH,EAiEGR,KAjEHjD,EAiEUsK,EAAeG,GAAAzH,MAAAC,KAAAJ,YAA5DqC,GAhEAlF,GAAsB,WAAPkK,EAAOlK,IAAA,oBAAAA,EAIbuK,EAAsB9G,GAH/BzD,GAiEA2K,mBAAA,SAAAzC,EAAA0C,EAAA9C,GACA,IAAApD,EAAAoD,EAAApD,OACAC,EAAAmD,EAAAnD,SACAkG,EAAA/C,EAAA+C,QACAC,EAAA5F,EAAAjE,MAAA6J,SAEA,GAAAD,EACA,OAAejG,EAAA,cAAoBC,EAAA,EAAI,CACvCC,KAAA,UACAqD,UAAA,GAAAd,OAAAa,EAAA,4BAIA,GAAAxD,EACA,OAAAoG,EACiBlG,EAAA,cAAoBC,EAAA,EAAI,CACzCC,KAAA,OACAqD,UAAA,GAAAd,OAAAa,EAAA,yBAIA,KAGA,IAAA6C,EAAA,GAAA1D,OAAAa,EAAA,kBAEA,GAAA0C,EAAA,CACA,IAAAI,EAAAJ,EAAA3J,MAAAkH,WAAA,GACA,OAAevD,EAAA,aAAkBgG,EAAA,CACjCzC,UAAqBG,IAAU0C,EAAAD,KAI/B,OAAAD,EACelG,EAAA,cAAoBC,EAAA,EAAI,CACvCC,KAAAH,EAAA,6BACAwD,UAAA,GAAAd,OAAAa,EAAA,uBACA+C,MAAA,aAIarG,EAAA,cAAoBC,EAAA,EAAI,CACrCC,KAAA,aACAqD,UAAA4C,EACAE,MAAA,YAIA/F,EAAAqC,WAAA,SAAAzG,GACAoE,EAAAsC,KAAA1G,GAGAoE,EAAAgG,WAAA,SAAAC,GACA,IAAAC,EAEArD,EAAAoD,EAAApD,aAGA9G,EADkCsJ,EAAsBrF,GACxDjE,MAEAgH,EAAAhH,EAAAiH,UACAC,EAAAlH,EAAAkH,UACA4B,EAAA9I,EAAA8I,SACAsB,EAAApK,EAAA2J,aACAU,EAAArK,EAAAqK,UACAtK,EAAAC,EAAAD,SACAuK,EAAAtK,EAAAsK,UACArD,EAAAH,EAAA,OAAAE,GACA,OAAarD,EAAA,cAAoB4G,EAAA,QAAQrB,EAAQ,CACjD3B,IAAAtD,EAAAqC,YACOtG,EAAA,CACPiH,YACAC,UAAmBG,IAAUH,GAAAiD,EAAA,GAA6BhB,EAAAgB,EAAA,GAAA/D,OAAAa,EAAA,eAAA6B,GAAAK,EAAAgB,EAAA,GAAA/D,OAAAa,EAAA,eAAAoD,GAAAF,IAC1DG,YAA+B3G,EAAA,cAAmB,QAClDuD,UAAA,GAAAd,OAAAa,EAAA,qBACSqD,EACTX,aAAA,SAAAa,GACA,OAAAvG,EAAAyF,mBAAAzC,EAAAmD,EAAAI,MAEOzK,IAGPkE,EA3JA,IAAqBE,EAAAiE,EAAAC,EAqKrB,OAxIA,SAAkBC,EAAAC,GAClB,uBAAAA,GAAA,OAAAA,EACA,UAAArJ,UAAA,sDAGAoJ,EAAAzJ,UAAAD,OAAA4J,OAAAD,KAAA1J,UAAA,CACAuC,YAAA,CACAqH,MAAAH,EACAjG,UAAA,EACAD,cAAA,KAGAmG,GAAkBgB,EAAejB,EAAAC,GAuB/BkC,CAASjB,EAsGT7F,EAAA,cAtKmBQ,EA8JPqF,GA9JOpB,EA8JP,EACdtI,IAAA,SACA2I,MAAA,WACA,OAAa9E,EAAA,cAAoBiF,EAAA,EAAc,KAAA5G,KAAAiI,iBAhK7Bb,EAAiBjF,EAAAtF,UAAAuJ,GACnCC,GAAmBe,EAAiBjF,EAAAkE,GAmKpCmB,EAtGA,GA0GAlC,EAAIoD,SAAYH,EAAA,SAChBjD,EAAItD,cAAiBgF,EACrB1B,EAAIuB,aAAA,CACJyB,WAAA,EACAxB,UAAA,EACA6B,OAAUzB,EAASA,EAAQ,GAAKyB,EAAA,GAAc,CAC9CC,cAAA,IAEAP,WAAA,GC/Oe,IAAA9D,EAAA,YCETmE,EAAWlB,EAAKkB,SAqCPG,6MAlCb9F,SAAW,SAACsB,EAAc/B,GACxBwG,QAAQC,IAAI,WAAY1E,EAAc/B,MAExC0G,QAAU,SAACC,EAAa3G,GACtBwG,QAAQC,IAAI,UAAWE,EAAa3G,4EAIpC,OACE4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,QAAQpE,UAAU,WAC5BgE,EAAAC,EAAAC,cAAC7E,EAAD,CACE+D,WAAS,EACT5C,oBAAqB,CAAC,QAAS,SAC/BE,oBAAqB,CAAC,QAAS,SAC/B2D,mBAAoB,CAAC,QAAS,SAC9BxG,SAAU/C,KAAK+C,SACfiG,QAAShJ,KAAKgJ,SAEdE,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAM,WAAWxL,IAAI,OAC7BoL,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAM,aAAaxL,IAAI,QAAQ0L,UAAQ,GAC/CN,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAM,OAAOxL,IAAI,UAAU2L,iBAAe,IACpDP,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAM,OAAOxL,IAAI,aAE7BoL,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAM,aAAaxL,IAAI,SAC/BoL,EAAAC,EAAAC,cAACV,EAAD,CAAUY,MAAOJ,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,YAArB,OAA6C7L,IAAI,uBAzB5D8L,IAAMC,WCFpBnB,EAAWlB,EAAKkB,SAEhB7C,EAAW,CAAC,CAChByD,MAAO,MACPxL,IAAK,MACLC,SAAU,CAAC,CACTuL,MAAO,QACPxL,IAAK,QACLC,SAAU,CACR,CAACuL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,aAEzB,CACDwL,MAAO,QACPxL,IAAK,QACLC,SAAU,CACR,CAACuL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,aAEzB,CACDwL,MAAO,QACPxL,IAAK,WAEN,CACDwL,MAAO,MACPxL,IAAK,MACLC,SAAU,CACR,CAACuL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,WACxB,CAACwL,MAAO,UAAWxL,IAAK,aAEzB,CACDwL,MAAO,MACPxL,IAAK,QA4DQgM,6MAxDb1G,MAAQ,CACNlF,aAAc,CAAC,QAAS,SACxB6L,kBAAkB,EAClBd,YAAa,CAAC,SACd5E,aAAc,MAEhBhC,SAAW,SAACnE,GAGV+D,EAAK0C,SAAS,CACZzG,eACA6L,kBAAkB,OAGtBf,QAAU,SAACC,GACTH,QAAQC,IAAI,UAAWE,GACvBhH,EAAK0C,SAAS,CAACsE,mBAEjBlG,SAAW,SAACsB,EAAc/B,GACxBwG,QAAQC,IAAI,WAAYzG,GACxBL,EAAK0C,SAAS,CAACN,oBAEjB2F,gBAAkB,SAACC,GACjB,OAAOA,EAAKC,IAAI,SAAClE,GACf,OAAIA,EAAKjI,SAELmL,EAAAC,EAAAC,cAACe,EAAD,CAAUb,MAAOtD,EAAKsD,MAAOxL,IAAKkI,EAAKlI,IAAKsM,QAASpE,GAClD/D,EAAK+H,gBAAgBhE,EAAKjI,WAI1BmL,EAAAC,EAAAC,cAACe,EAAanE,8EAKvB,OACEkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,gBAAgBpE,UAAU,WACpCgE,EAAAC,EAAAC,cAAC7E,EAAD,CACE+D,WAAS,EACTjG,SAAUrC,KAAKqC,SACfnE,aAAc8B,KAAKoD,MAAMlF,aACzB6L,iBAAkB/J,KAAKoD,MAAM2G,iBAC7Bf,QAAShJ,KAAKgJ,QACdC,YAAajJ,KAAKoD,MAAM6F,YACxBlG,SAAU/C,KAAK+C,SACfsB,aAAcrE,KAAKoD,MAAMiB,cAExBrE,KAAKgK,gBAAgBnE,YAjDL+D,IAAMC,sBCtC3BnB,GAAWlB,EAAKkB,SAKhB2B,GAAQ,IAGO,SAAfC,EAAgBC,EAAQC,EAASC,GAKrC,IAJA,IAAMC,EAASF,GAAW,IACpBG,EAAMF,GAAQJ,GAEdtM,EAAW,GACR1B,EAAI,EAAGA,EAXR,EAWeA,IAAK,CAC1B,IAAMyB,EAAG,GAAAsG,OAAMsG,EAAN,KAAAtG,OAAgB/H,GACzBsO,EAAIjM,KAAK,CAAC4K,MAAOxL,EAAKA,QAClBzB,EAbE,GAcJ0B,EAASW,KAAKZ,GAGlB,GAAIyM,EAAS,EACX,OAAOI,EAET,IAAMC,EAAQL,EAAS,EACvBxM,EAASH,QAAQ,SAACE,EAAKkB,GAErB,OADA2L,EAAI3L,GAAOjB,SAAW,GACfuM,EAAaM,EAAO9M,EAAK6M,EAAI3L,GAAOjB,YAG/CuM,CAzBU,OA8GKO,8MAlFbzH,MAAQ,CACNiH,SACAnM,aAAc,CAAC,MAAO,QAAS,cAEjC4M,YAAc,SAACxI,GACbwG,QAAQC,IAAIzG,MAMdyI,OAAS,SAACzI,GACRwG,QAAQC,IAAIzG,GACZ,IAgBI0I,EAMEC,EACA5O,EAvBA6O,EAAU5I,EAAKzE,KAAKG,MAAMuF,SAC1B4H,EAAU7I,EAAK8I,SAASpN,MAAMuF,SAC9B8H,EAAU/I,EAAKzE,KAAKG,MAAMsN,IAAIC,MAAM,KACpCC,EAAelJ,EAAKkJ,aAAeC,OAAOJ,EAAQA,EAAQ9O,OAAS,IAEnEmP,EAAO,SAAPA,EAAQzB,EAAMnM,EAAKJ,GACvBuM,EAAKrM,QAAQ,SAACoI,EAAMhH,EAAO9C,GACzB,OAAI8J,EAAKlI,MAAQA,EACRJ,EAASsI,EAAMhH,EAAO9C,GAE3B8J,EAAKjI,SACA2N,EAAK1F,EAAKjI,SAAUD,EAAKJ,QADlC,KAKEuM,EAAIrN,OAAA+O,GAAA,EAAA/O,CAAOqF,EAAKmB,MAAMiH,QAE5BqB,EAAKzB,EAAMkB,EAAS,SAACnF,EAAMhH,EAAO9C,GAChCA,EAAI+C,OAAOD,EAAO,GAClBgM,EAAUhF,IAER1D,EAAKsJ,YAGPF,EAAKzB,EAAMiB,EAAS,SAAClF,EAAMhH,EAAO9C,GAChC+O,EAAK/O,EACLG,EAAI2C,KAEgB,IAAlBwM,EACFP,EAAGhM,OAAO5C,EAAG,EAAG2O,GAEhBC,EAAGhM,OAAO5C,EAAI,EAAG,EAAG2O,IAGtBU,EAAKzB,EAAMiB,EAAS,SAAClF,GACnBA,EAAKjI,SAAWiI,EAAKjI,UAAY,GAEjCiI,EAAKjI,SAASW,KAAKsM,KAGvB/I,EAAK0C,SAAS,CACZ0F,MAAOJ,6EAWT,OACEf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,WAAWpE,UAAU,WAC/BgE,EAAAC,EAAAC,cAAC7E,EAAD,CACEW,UAAU,iBACVQ,oBAAqB1F,KAAKoD,MAAMlF,aAChC2N,WAAS,EACTf,YAAa9K,KAAK8K,YAClBC,OAAQ/K,KAAK+K,QAbN,SAAPW,EAAOzB,GAAI,OAAIA,EAAKC,IAAI,SAAClE,GAC7B,OAAIA,EAAKjI,UAAYiI,EAAKjI,SAASxB,OAC1B2M,EAAAC,EAAAC,cAAC0C,GAAD,CAAUhO,IAAKkI,EAAKlI,IAAKwL,MAAOtD,EAAKlI,KAAM4N,EAAK1F,EAAKjI,WAEvDmL,EAAAC,EAAAC,cAAC0C,GAAD,CAAUhO,IAAKkI,EAAKlI,IAAKwL,MAAOtD,EAAKlI,QAWvC4N,CAAK1L,KAAKoD,MAAMiH,gBA3EJT,IAAMC,WC/BvBnB,GAAWlB,EAAKkB,SAqDPqD,8MAlDb3I,MAAQ,CACNyC,SAAU,CACR,CAACyD,MAAO,iBAAkBxL,IAAK,KAC/B,CAACwL,MAAO,iBAAkBxL,IAAK,KAC/B,CAACwL,MAAO,YAAaxL,IAAK,IAAK2D,QAAQ,OAG3CuK,WAAa,SAACC,GACZ,OAAO,IAAIC,QAAQ,SAACC,GACdF,EAASjO,MAAMD,SACjBoO,IAGFC,WAAW,WACTH,EAASjO,MAAMoM,QAAQrM,SAAW,CAChC,CAACuL,MAAO,aAAcxL,IAAG,GAAAsG,OAAK6H,EAASjO,MAAMuF,SAApB,OACzB,CAAC+F,MAAO,aAAcxL,IAAG,GAAAsG,OAAK6H,EAASjO,MAAMuF,SAApB,QAE3BtB,EAAK0C,SAAS,CACZkB,SAASjJ,OAAA+O,GAAA,EAAA/O,CAAKqF,EAAKmB,MAAMyC,YAE3BsG,KACC,UAGPnC,gBAAkB,SAACC,GACjB,OAAOA,EAAKC,IAAI,SAAClE,GACf,OAAIA,EAAKjI,SAELmL,EAAAC,EAAAC,cAACiD,GAAD,CAAU/C,MAAOtD,EAAKsD,MAAOxL,IAAKkI,EAAKlI,IAAKsM,QAASpE,GAClD/D,EAAK+H,gBAAgBhE,EAAKjI,WAI1BmL,EAAAC,EAAAC,cAACiD,GAADzP,OAAA8C,OAAA,GAAcsG,EAAd,CAAoBoE,QAASpE,gFAKtC,OACEkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,YAAYpE,UAAU,WAChCgE,EAAAC,EAAAC,cAAC7E,EAAD,CAAM+H,SAAUtM,KAAKgM,YAClBhM,KAAKgK,gBAAgBhK,KAAKoD,MAAMyC,mBA3CpB+D,IAAMC,sBCFvBnB,GAAWlB,EAAKkB,SAChB6D,GAASC,KAAMD,OAKflC,GAAQ,IAEO,SAAfC,EAAgBC,EAAQC,EAASC,GAKrC,IAJA,IAAMC,EAASF,GAAW,IACpBG,EAAMF,GAAQJ,GAEdtM,EAAW,GACR1B,EAAI,EAAGA,EAVR,EAUeA,IAAK,CAC1B,IAAMyB,EAAG,GAAAsG,OAAMsG,EAAN,KAAAtG,OAAgB/H,GACzBsO,EAAIjM,KAAK,CAAC4K,MAAOxL,EAAKA,QAClBzB,EAZE,GAaJ0B,EAASW,KAAKZ,GAGlB,GAAIyM,EAAS,EACX,OAAOI,EAET,IAAMC,EAAQL,EAAS,EACvBxM,EAASH,QAAQ,SAACE,EAAKkB,GAErB,OADA2L,EAAI3L,GAAOjB,SAAW,GACfuM,EAAaM,EAAO9M,EAAK6M,EAAI3L,GAAOjB,YAG/CuM,CAxBU,GA0BV,IAAMmC,GAAW,IACI,SAAfC,EAAgBzC,GACpB,IAAK,IAAI5N,EAAI,EAAGA,EAAI4N,EAAK1N,OAAQF,IAAK,CACpC,IAAMwB,EAAOoM,EAAK5N,GACZyB,EAAMD,EAAKC,IACjB2O,GAAS/N,KAAK,CAACZ,MAAKwL,MAAOxL,IACvBD,EAAKE,UACP2O,EAAa7O,EAAKE,SAAUF,EAAKC,MAIvC4O,CAAarC,IAEb,IAAMsC,GAAe,SAAfA,EAAgB7O,EAAKyG,GAEzB,IADA,IAAIqI,EACKvQ,EAAI,EAAGA,EAAIkI,EAAKhI,OAAQF,IAAK,CACpC,IAAMwB,EAAO0G,EAAKlI,GACdwB,EAAKE,WACHF,EAAKE,SAAS8O,KAAK,SAAA7G,GAAI,OAAIA,EAAKlI,MAAQA,IAC1C8O,EAAY/O,EAAKC,IACR6O,EAAa7O,EAAKD,EAAKE,YAChC6O,EAAYD,EAAa7O,EAAKD,EAAKE,YAIzC,OAAO6O,GAmEME,8MA/Db1J,MAAQ,CACNlF,aAAc,GACd6O,YAAa,GACbhD,kBAAkB,KAEpB1H,SAAW,SAACnE,GACV+D,EAAK0C,SAAS,CACZzG,eACA6L,kBAAkB,OAGtBiD,SAAW,SAAC5L,GACV,IAAMqF,EAAQrF,EAAEzB,OAAO8G,MACjBvI,EAAeuO,GAASvC,IAAI,SAAClE,GACjC,OAAIA,EAAKlI,IAAIc,QAAQ6H,IAAU,EACtBkG,GAAa3G,EAAKlI,IAAKuM,IAEzB,OACN4C,OAAO,SAACjH,EAAM3J,EAAGmE,GAAV,OAAmBwF,GAAQxF,EAAK5B,QAAQoH,KAAU3J,IAC5D4F,EAAK0C,SAAS,CACZzG,eACA6O,YAAatG,EACbsD,kBAAkB,6EAIb,IAAA5E,EAC+CnF,KAAKoD,MAApD2J,EADA5H,EACA4H,YAAa7O,EADbiH,EACajH,aAAc6L,EAD3B5E,EAC2B4E,iBAqBlC,OACEb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,aAAapE,UAAU,WACjCgE,EAAAC,EAAAC,cAACmD,GAAD,CAAQ7C,MAAO,CAACwD,aAAc,GAAIC,YAAY,SAASH,SAAUhN,KAAKgN,WACtE9D,EAAAC,EAAAC,cAAC7E,EAAD,CACElC,SAAUrC,KAAKqC,SACfnE,aAAcA,EACd6L,iBAAkBA,GA1BX,SAAP2B,EAAOzB,GAAI,OAAIA,EAAKC,IAAI,SAAClE,GAC7B,IAAMhH,EAAQgH,EAAKlI,IAAIc,QAAQmO,GACzBK,EAAYpH,EAAKlI,IAAIuP,OAAO,EAAGrO,GAC/BsO,EAAWtH,EAAKlI,IAAIuP,OAAOrO,EAAQ+N,EAAYxQ,QAC/C+M,EAAQtK,GAAS,EACrBkK,EAAAC,EAAAC,cAAA,YACGgE,EACDlE,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,SAAUoD,GAC9BO,GAEDpE,EAAAC,EAAAC,cAAA,YAAOpD,EAAKlI,KAChB,OAAIkI,EAAKjI,SAELmL,EAAAC,EAAAC,cAACmE,GAAD,CAAUzP,IAAKkI,EAAKlI,IAAKwL,MAAOA,GAC7BoC,EAAK1F,EAAKjI,WAIVmL,EAAAC,EAAAC,cAACmE,GAAD,CAAUzP,IAAKkI,EAAKlI,IAAKwL,MAAOA,MAUlCoC,CAAKrB,aAzDST,IAAMC,WC3DzBnB,GAAWlB,EAAKkB,SAmCP8E,8MAhCbzK,SAAW,SAACsB,EAAc/B,GACxBwG,QAAQC,IAAI,WAAY1E,EAAc/B,4EAItC,OACE4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,WAAWpE,UAAU,WAC/BgE,EAAAC,EAAAC,cAAC7E,EAAD,CACEsD,UAAQ,EACRnC,oBAAqB,CAAC,SACtB3C,SAAU/C,KAAK+C,UAEfmG,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,WAAWxL,IAAI,OAC7BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,aAAaxL,IAAI,SAC/BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,YAC3BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,YAC3BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,aAE7BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,aAAaxL,IAAI,SAC/BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,aAE7BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,aAAaxL,IAAI,SAC/BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,YAC3BoL,EAAAC,EAAAC,cAACqE,GAAD,CAAUnE,MAAM,OAAOxL,IAAI,uBAxBlB8L,IAAMC,WCwBdrC,UAlBF,WACX,OACE0B,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACExE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B7E,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,GAAD,OAEFhF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B7E,EAAAC,EAAAC,cAAC+E,GAAD,MACAjF,EAAAC,EAAAC,cAACgF,GAAD,MACAlF,EAAAC,EAAAC,cAACiF,GAAD","file":"static/js/58.1c329d16.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { getNodeChildren, convertTreeToEntities } from \"rc-tree/es/util\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {})); // TODO: Move this logic into `rc-tree`\n\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key,\n        children = node.props.children;\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return Object.keys(keyEntities);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  (treeData || []).forEach(function (item) {\n    if (item.children) {\n      keys.push(item.key);\n      keys.concat(getFullKeyListByTreeData(item.children, keys));\n    } else {\n      keys.push(item.key);\n    }\n  });\n  return keys;\n}","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from \"rc-tree/es/util\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData } from './util';\nimport Icon from '../icon';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return React.createElement(Icon, {\n      type: \"file\"\n    });\n  }\n\n  return React.createElement(Icon, {\n    type: expanded ? 'folder-open' : 'folder'\n  });\n}\n\nvar DirectoryTree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n\n  function DirectoryTree(props) {\n    var _this;\n\n    _classCallCheck(this, DirectoryTree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoryTree).call(this, props));\n\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n\n      return undefined;\n    };\n\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n          onDoubleClick = _this$props2.onDoubleClick,\n          expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple,\n          children = _this$props3.children;\n      var _this$state$expandedK = _this.state.expandedKeys,\n          expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n          nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n          eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n\n      newState.selectedKeys = newSelectedKeys;\n\n      if (onSelect) {\n        onSelect(newSelectedKeys, newEvent);\n      }\n\n      _this.setUncontrolledState(newState);\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.props.isLeaf;\n\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var newState = omit(state, Object.keys(_this.props));\n\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n\n    _this.renderDirectoryTree = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          props = __rest(_a, [\"prefixCls\", \"className\"]);\n\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n      return React.createElement(Tree, _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n\n    var defaultExpandAll = props.defaultExpandAll,\n        defaultExpandParent = props.defaultExpandParent,\n        expandedKeys = props.expandedKeys,\n        defaultExpandedKeys = props.defaultExpandedKeys,\n        children = props.children;\n\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities; // Selected keys\n\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      if (props.treeData) {\n        _this.state.expandedKeys = getFullKeyListByTreeData(props.treeData);\n      } else {\n        _this.state.expandedKeys = getFullKeyList(props.children);\n      }\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n\n    _this.onDebounceExpand = debounce(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('expandedKeys' in nextProps) {\n        newState.expandedKeys = nextProps.expandedKeys;\n      }\n\n      if ('selectedKeys' in nextProps) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return DirectoryTree;\n}(React.Component);\n\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\n\nvar Tree =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tree).apply(this, arguments));\n\n    _this.renderSwitcherIcon = function (prefixCls, switcherIcon, _ref) {\n      var isLeaf = _ref.isLeaf,\n          expanded = _ref.expanded,\n          loading = _ref.loading;\n      var showLine = _this.props.showLine;\n\n      if (loading) {\n        return React.createElement(Icon, {\n          type: \"loading\",\n          className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        });\n      }\n\n      if (isLeaf) {\n        if (showLine) {\n          return React.createElement(Icon, {\n            type: \"file\",\n            className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n          });\n        }\n\n        return null;\n      }\n\n      var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n      if (switcherIcon) {\n        var switcherOriginCls = switcherIcon.props.className || '';\n        return React.cloneElement(switcherIcon, {\n          className: classNames(switcherOriginCls, switcherCls)\n        });\n      }\n\n      if (showLine) {\n        return React.createElement(Icon, {\n          type: expanded ? 'minus-square' : 'plus-square',\n          className: \"\".concat(prefixCls, \"-switcher-line-icon\"),\n          theme: \"outlined\"\n        });\n      }\n\n      return React.createElement(Icon, {\n        type: \"caret-down\",\n        className: switcherCls,\n        theme: \"filled\"\n      });\n    };\n\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n\n    _this.renderTree = function (_ref2) {\n      var _classNames;\n\n      var getPrefixCls = _ref2.getPrefixCls;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          showIcon = props.showIcon,\n          _switcherIcon = props.switcherIcon,\n          blockNode = props.blockNode,\n          children = props.children;\n      var checkable = props.checkable;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      return React.createElement(RcTree, _extends({\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _classNames)),\n        checkable: checkable ? React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-checkbox-inner\")\n        }) : checkable,\n        switcherIcon: function switcherIcon(nodeProps) {\n          return _this.renderSwitcherIcon(prefixCls, _switcherIcon, nodeProps);\n        }\n      }), children);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTree);\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nexport { Tree as default };\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};","import Tree from './Tree';\nexport default Tree;","import React from \"react\";\r\nimport {Card, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nclass Basic extends React.Component {\r\n  onSelect = (selectedKeys, info) => {\r\n    console.log('selected', selectedKeys, info);\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    console.log('onCheck', checkedKeys, info);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card title=\"Basic\" className=\"gx-card\">\r\n        <Tree\r\n          checkable\r\n          defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n          defaultSelectedKeys={['0-0-0', '0-0-1']}\r\n          defaultCheckedKeys={['0-0-0', '0-0-1']}\r\n          onSelect={this.onSelect}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"parent 1\" key=\"0-0\">\r\n            <TreeNode title=\"parent 1-0\" key=\"0-0-0\" disabled>\r\n              <TreeNode title=\"leaf\" key=\"0-0-0-0\" disableCheckbox/>\r\n              <TreeNode title=\"leaf\" key=\"0-0-0-1\"/>\r\n            </TreeNode>\r\n            <TreeNode title=\"parent 1-1\" key=\"0-0-1\">\r\n              <TreeNode title={<span style={{color: '#1890ff'}}>sss</span>} key=\"0-0-1-0\"/>\r\n            </TreeNode>\r\n          </TreeNode>\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Card, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nconst treeData = [{\r\n  title: '0-0',\r\n  key: '0-0',\r\n  children: [{\r\n    title: '0-0-0',\r\n    key: '0-0-0',\r\n    children: [\r\n      {title: '0-0-0-0', key: '0-0-0-0'},\r\n      {title: '0-0-0-1', key: '0-0-0-1'},\r\n      {title: '0-0-0-2', key: '0-0-0-2'},\r\n    ],\r\n  }, {\r\n    title: '0-0-1',\r\n    key: '0-0-1',\r\n    children: [\r\n      {title: '0-0-1-0', key: '0-0-1-0'},\r\n      {title: '0-0-1-1', key: '0-0-1-1'},\r\n      {title: '0-0-1-2', key: '0-0-1-2'},\r\n    ],\r\n  }, {\r\n    title: '0-0-2',\r\n    key: '0-0-2',\r\n  }],\r\n}, {\r\n  title: '0-1',\r\n  key: '0-1',\r\n  children: [\r\n    {title: '0-1-0-0', key: '0-1-0-0'},\r\n    {title: '0-1-0-1', key: '0-1-0-1'},\r\n    {title: '0-1-0-2', key: '0-1-0-2'},\r\n  ],\r\n}, {\r\n  title: '0-2',\r\n  key: '0-2',\r\n}];\r\n\r\nclass BasicControl extends React.Component {\r\n  state = {\r\n    expandedKeys: ['0-0-0', '0-0-1'],\r\n    autoExpandParent: true,\r\n    checkedKeys: ['0-0-0'],\r\n    selectedKeys: [],\r\n  };\r\n  onExpand = (expandedKeys) => {\r\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n  onCheck = (checkedKeys) => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({checkedKeys});\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    console.log('onSelect', info);\r\n    this.setState({selectedKeys});\r\n  };\r\n  renderTreeNodes = (data) => {\r\n    return data.map((item) => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode {...item} />;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card title=\"Basic Control\" className=\"gx-card\">\r\n        <Tree\r\n          checkable\r\n          onExpand={this.onExpand}\r\n          expandedKeys={this.state.expandedKeys}\r\n          autoExpandParent={this.state.autoExpandParent}\r\n          onCheck={this.onCheck}\r\n          checkedKeys={this.state.checkedKeys}\r\n          onSelect={this.onSelect}\r\n          selectedKeys={this.state.selectedKeys}\r\n        >\r\n          {this.renderTreeNodes(treeData)}\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default BasicControl;\r\n","import React from \"react\";\r\nimport {Card, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({title: key, key});\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nclass Dragable extends React.Component {\r\n  state = {\r\n    gData,\r\n    expandedKeys: ['0-0', '0-0-0', '0-0-0-0'],\r\n  };\r\n  onDragEnter = (info) => {\r\n    console.log(info);\r\n    // expandedKeys 需要受控时设置\r\n    // this.setState({\r\n    //   expandedKeys: info.expandedKeys,\r\n    // });\r\n  };\r\n  onDrop = (info) => {\r\n    console.log(info);\r\n    const dropKey = info.node.props.eventKey;\r\n    const dragKey = info.dragNode.props.eventKey;\r\n    const dropPos = info.node.props.pos.split('-');\r\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n    // const dragNodesKeys = info.dragNodesKeys;\r\n    const loop = (data, key, callback) => {\r\n      data.forEach((item, index, arr) => {\r\n        if (item.key === key) {\r\n          return callback(item, index, arr);\r\n        }\r\n        if (item.children) {\r\n          return loop(item.children, key, callback);\r\n        }\r\n      });\r\n    };\r\n    const data = [...this.state.gData];\r\n    let dragObj;\r\n    loop(data, dragKey, (item, index, arr) => {\r\n      arr.splice(index, 1);\r\n      dragObj = item;\r\n    });\r\n    if (info.dropToGap) {\r\n      let ar;\r\n      let i;\r\n      loop(data, dropKey, (item, index, arr) => {\r\n        ar = arr;\r\n        i = index;\r\n      });\r\n      if (dropPosition === -1) {\r\n        ar.splice(i, 0, dragObj);\r\n      } else {\r\n        ar.splice(i + 1, 0, dragObj);\r\n      }\r\n    } else {\r\n      loop(data, dropKey, (item) => {\r\n        item.children = item.children || [];\r\n        // where to insert 示例添加到尾部，可以是随意位置\r\n        item.children.push(dragObj);\r\n      });\r\n    }\r\n    this.setState({\r\n      gData: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const loop = data => data.map((item) => {\r\n      if (item.children && item.children.length) {\r\n        return <TreeNode key={item.key} title={item.key}>{loop(item.children)}</TreeNode>;\r\n      }\r\n      return <TreeNode key={item.key} title={item.key}/>;\r\n    });\r\n    return (\r\n      <Card title=\"Dragable\" className=\"gx-card\">\r\n        <Tree\r\n          className=\"draggable-tree\"\r\n          defaultExpandedKeys={this.state.expandedKeys}\r\n          draggable\r\n          onDragEnter={this.onDragEnter}\r\n          onDrop={this.onDrop}\r\n        >\r\n          {loop(this.state.gData)}\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dragable;\r\n","import React from \"react\";\r\nimport {Card, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nclass LoadData extends React.Component {\r\n  state = {\r\n    treeData: [\r\n      {title: 'Expand to load', key: '0'},\r\n      {title: 'Expand to load', key: '1'},\r\n      {title: 'Tree Node', key: '2', isLeaf: true},\r\n    ],\r\n  };\r\n  onLoadData = (treeNode) => {\r\n    return new Promise((resolve) => {\r\n      if (treeNode.props.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        treeNode.props.dataRef.children = [\r\n          {title: 'Child Node', key: `${treeNode.props.eventKey}-0`},\r\n          {title: 'Child Node', key: `${treeNode.props.eventKey}-1`},\r\n        ];\r\n        this.setState({\r\n          treeData: [...this.state.treeData],\r\n        });\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n  };\r\n  renderTreeNodes = (data) => {\r\n    return data.map((item) => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode {...item} dataRef={item}/>;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card title=\"Load Data\" className=\"gx-card\">\r\n        <Tree loadData={this.onLoadData}>\r\n          {this.renderTreeNodes(this.state.treeData)}\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LoadData;\r\n","import React from \"react\";\r\nimport {Card, Input, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\nconst Search = Input.Search;\r\n\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({title: key, key});\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nconst dataList = [];\r\nconst generateList = (data) => {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const node = data[i];\r\n    const key = node.key;\r\n    dataList.push({key, title: key});\r\n    if (node.children) {\r\n      generateList(node.children, node.key);\r\n    }\r\n  }\r\n};\r\ngenerateList(gData);\r\n\r\nconst getParentKey = (key, tree) => {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some(item => item.key === key)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey(key, node.children)) {\r\n        parentKey = getParentKey(key, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nclass Searchable extends React.Component {\r\n  state = {\r\n    expandedKeys: [],\r\n    searchValue: '',\r\n    autoExpandParent: true,\r\n  };\r\n  onExpand = (expandedKeys) => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n  onChange = (e) => {\r\n    const value = e.target.value;\r\n    const expandedKeys = dataList.map((item) => {\r\n      if (item.key.indexOf(value) > -1) {\r\n        return getParentKey(item.key, gData);\r\n      }\r\n      return null;\r\n    }).filter((item, i, self) => item && self.indexOf(item) === i);\r\n    this.setState({\r\n      expandedKeys,\r\n      searchValue: value,\r\n      autoExpandParent: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {searchValue, expandedKeys, autoExpandParent} = this.state;\r\n    const loop = data => data.map((item) => {\r\n      const index = item.key.indexOf(searchValue);\r\n      const beforeStr = item.key.substr(0, index);\r\n      const afterStr = item.key.substr(index + searchValue.length);\r\n      const title = index > -1 ? (\r\n        <span>\r\n          {beforeStr}\r\n          <span style={{color: '#f50'}}>{searchValue}</span>\r\n          {afterStr}\r\n        </span>\r\n      ) : <span>{item.key}</span>;\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode key={item.key} title={title}>\r\n            {loop(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} title={title}/>;\r\n    });\r\n    return (\r\n      <Card title=\"Searchable\" className=\"gx-card\">\r\n        <Search style={{marginBottom: 8}} placeholder=\"Search\" onChange={this.onChange}/>\r\n        <Tree\r\n          onExpand={this.onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n        >\r\n          {loop(gData)}\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchable;\r\n","import React from \"react\";\r\nimport {Card, Tree} from \"antd\";\r\n\r\nconst TreeNode = Tree.TreeNode;\r\n\r\nclass TreeLine extends React.Component {\r\n  onSelect = (selectedKeys, info) => {\r\n    console.log('selected', selectedKeys, info);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card title=\"TreeLine\" className=\"gx-card\">\r\n        <Tree\r\n          showLine\r\n          defaultExpandedKeys={['0-0-0']}\r\n          onSelect={this.onSelect}\r\n        >\r\n          <TreeNode title=\"parent 1\" key=\"0-0\">\r\n            <TreeNode title=\"parent 1-0\" key=\"0-0-0\">\r\n              <TreeNode title=\"leaf\" key=\"0-0-0-0\"/>\r\n              <TreeNode title=\"leaf\" key=\"0-0-0-1\"/>\r\n              <TreeNode title=\"leaf\" key=\"0-0-0-2\"/>\r\n            </TreeNode>\r\n            <TreeNode title=\"parent 1-1\" key=\"0-0-1\">\r\n              <TreeNode title=\"leaf\" key=\"0-0-1-0\"/>\r\n            </TreeNode>\r\n            <TreeNode title=\"parent 1-2\" key=\"0-0-2\">\r\n              <TreeNode title=\"leaf\" key=\"0-0-2-0\"/>\r\n              <TreeNode title=\"leaf\" key=\"0-0-2-1\"/>\r\n            </TreeNode>\r\n          </TreeNode>\r\n        </Tree>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeLine;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport BasicControl from \"./BasicControl\";\r\nimport Dragable from \"./Dragable\";\r\nimport LoadData from \"./LoadData\";\r\nimport Searchable from \"./Searchable\";\r\nimport TreeLine from \"./TreeLine\";\r\n\r\n\r\nconst Tree = () => {\r\n  return (\r\n    <Row>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Basic/>\r\n        <BasicControl/>\r\n        <Dragable/>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <LoadData/>\r\n        <Searchable/>\r\n        <TreeLine/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n\r\nexport default Tree;\r\n"],"sourceRoot":""}