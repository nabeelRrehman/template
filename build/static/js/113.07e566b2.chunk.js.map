{"version":3,"sources":["routes/components/dataEntry/Upload/UploadClick.js","routes/components/dataEntry/Upload/Avatar.js","routes/components/dataEntry/Upload/UploadDefault.js","routes/components/dataEntry/Upload/UploadPicture.js","routes/components/dataEntry/Upload/CompleteControl.js","routes/components/dataEntry/Upload/DragDrop.js","routes/components/dataEntry/Upload/UploadListStyle.js","routes/components/dataEntry/Upload/index.js"],"names":["props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","concat","error","UploadClick","react_default","a","createElement","card","className","title","upload","es_button","icon","type","beforeUpload","isJPG","isLt2M","size","Avatar","state","loading","handleChange","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","_this","setState","uploadButton","this","listType","showUploadList","src","alt","React","Component","_ref","defaultFileList","uid","reponse","url","UploadDefault","UploadPicture","previewVisible","previewImage","handleCancel","handlePreview","thumbUrl","_this$state","onPreview","length","modal","visible","footer","onCancel","style","width","CompleteControl","slice","map","response","filter","multiple","Object","assign","Dragger","Upload","DragDrop","props2","UploadListStyle","row","col","lg","md","sm","xs","Upload_UploadClick","Upload_Avatar","Upload_UploadDefault","Upload_UploadPicture","Upload_CompleteControl","Upload_DragDrop","Upload_UploadListStyle"],"mappings":"gOAGMA,EAAQ,CACZC,KAAM,OACNC,OAAQ,wCACRC,QAAS,CACPC,cAAe,sBAEjBC,SANY,SAMHC,GACkB,cAArBA,EAAKC,KAAKC,QACZC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEL,SAArBL,EAAKC,KAAKC,OACZI,IAAQC,QAAR,GAAAC,OAAmBR,EAAKC,KAAKN,KAA7B,gCAC8B,UAArBK,EAAKC,KAAKC,QACnBI,IAAQG,MAAR,GAAAD,OAAiBR,EAAKC,KAAKN,KAA3B,2BAkBSe,EAbK,WAChB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,gBAC9BL,EAAAC,EAAAC,cAACI,EAAA,EAAWvB,EACViB,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,uBChBV,SAASC,EAAapB,GACpB,IAAMqB,EAAsB,eAAdrB,EAAKmB,KACdE,GACHhB,IAAQG,MAAM,iCAEhB,IAAMc,EAAStB,EAAKuB,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACHjB,IAAQG,MAAM,gCAETa,GAASC,MA+CHE,6MA3CbC,MAAQ,CACNC,SAAS,KAEXC,aAAe,SAAC5B,GACW,cAArBA,EAAKC,KAAKC,OAIW,SAArBF,EAAKC,KAAKC,QA3BlB,SAAmB2B,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,kBAAMH,EAASC,EAAOG,UACtDH,EAAOI,cAAcN,GA0BjBO,CAAUpC,EAAKC,KAAKoC,cAAe,SAAAC,GAAQ,OAAIC,EAAKC,SAAS,CAC3DF,WACAX,SAAS,MAPXY,EAAKC,SAAS,CAACb,SAAS,6EAa1B,IAAMc,EACJ9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAMsB,KAAKhB,MAAMC,QAAU,UAAY,SAC7ChB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,WAGEuB,EAAWI,KAAKhB,MAAMY,SAC5B,OACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,UAC9BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEtB,KAAK,SACLgD,SAAS,eACT5B,UAAU,kBACV6B,gBAAgB,EAChBhD,OAAO,wCACPyB,aAAcA,EACdtB,SAAU2C,KAAKd,cAEdU,EAAW3B,EAAAC,EAAAC,cAAA,OAAKgC,IAAKP,EAAUQ,IAAI,KAAOL,WArChCM,IAAMC,WClBrBtD,EAAQ,CACZE,OAAQ,wCACRG,SAFY,SAAAkD,GAEe,IAAjBhD,EAAiBgD,EAAjBhD,KAAMI,EAAW4C,EAAX5C,SACM,cAAhBJ,EAAKC,QACPC,QAAQC,IAAIH,EAAMI,IAGtB6C,gBAAiB,CAAC,CAChBC,IAAK,EACLxD,KAAM,UACNO,OAAQ,OACRkD,QAAS,mBACTC,IAAK,gCACJ,CACDF,IAAK,EACLxD,KAAM,UACNO,OAAQ,OACRmD,IAAK,gCACJ,CACDF,IAAK,EACLxD,KAAM,UACNO,OAAQ,QACRkD,QAAS,mBACTC,IAAK,kCAiBMC,EAbO,WAClB,OACE3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,kBAC9BL,EAAAC,EAAAC,cAACI,EAAA,EAAWvB,EACViB,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,wBCmBKmC,6MAjDb7B,MAAQ,CACN8B,gBAAgB,EAChBC,aAAc,GACdpD,SAAU,CAAC,CACT8C,KAAM,EACNxD,KAAM,UACNO,OAAQ,OACRmD,IAAK,oFAITK,aAAe,kBAAMnB,EAAKC,SAAS,CAACgB,gBAAgB,OAEpDG,cAAgB,SAAC1D,GACfsC,EAAKC,SAAS,CACZiB,aAAcxD,EAAKoD,KAAOpD,EAAK2D,SAC/BJ,gBAAgB,OAIpB5B,aAAe,SAAAqB,GAAA,IAAE5C,EAAF4C,EAAE5C,SAAF,OAAgBkC,EAAKC,SAAS,CAACnC,sFAErC,IAAAwD,EAC0CnB,KAAKhB,MAA/C8B,EADAK,EACAL,eAAgBC,EADhBI,EACgBJ,aAAcpD,EAD9BwD,EAC8BxD,SAC/BoC,EACJ9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,SACXT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,WAGJ,OACEJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAM,gBAAgBD,UAAU,oBACpCJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACErB,OAAO,wCACP+C,SAAS,eACTtC,SAAUA,EACVyD,UAAWpB,KAAKiB,cAChB5D,SAAU2C,KAAKd,cAEdvB,EAAS0D,QAAU,EAAI,KAAOtB,GAEjC9B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,QAAST,EAAgBU,OAAQ,KAAMC,SAAUzB,KAAKgB,cAC3D/C,EAAAC,EAAAC,cAAA,OAAKiC,IAAI,UAAUsB,MAAO,CAACC,MAAO,QAASxB,IAAKY,aA3C9BV,IAAMC,WCsDnBsB,6MArDb5C,MAAQ,CACNrB,SAAU,CAAC,CACT8C,KAAM,EACNxD,KAAM,UACNO,OAAQ,OACRmD,IAAK,oCAGTzB,aAAe,SAAC5B,GACd,IAAIK,EAAWL,EAAKK,SAgBpBA,GATAA,GAHAA,EAAWA,EAASkE,OAAO,IAGPC,IAAI,SAACvE,GAKvB,OAJIA,EAAKwE,WAEPxE,EAAKoD,IAAMpD,EAAKwE,SAASpB,KAEpBpD,KAIWyE,OAAO,SAACzE,GAC1B,OAAIA,EAAKwE,UACyB,YAAzBxE,EAAKwE,SAASvE,SAKzBqC,EAAKC,SAAS,CAACnC,sFAIf,IAAMX,EAAQ,CACZE,OAAQ,wCACRG,SAAU2C,KAAKd,aACf+C,UAAU,GAEZ,OACEhE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,oBAC9BL,EAAAC,EAAAC,cAACI,EAAA,EAAD2D,OAAAC,OAAA,GAAYnF,EAAZ,CAAmBW,SAAUqC,KAAKhB,MAAMrB,WACtCM,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,oBA7CoB2B,IAAMC,WCA9B8B,EAAUC,IAAOD,QAEjBpF,EAAQ,CACZC,KAAM,OACNgF,UAAU,EACV/E,OAAQ,wCACRG,SAJY,SAIHC,GACP,IAAME,EAASF,EAAKC,KAAKC,OACV,cAAXA,GACFC,QAAQC,IAAIJ,EAAKC,KAAMD,EAAKK,UAEf,SAAXH,EACFI,IAAQC,QAAR,GAAAC,OAAmBR,EAAKC,KAAKN,KAA7B,iCACoB,UAAXO,GACTI,IAAQG,MAAR,GAAAD,OAAiBR,EAAKC,KAAKN,KAA3B,2BAqBSqF,EAhBE,WACb,OACErE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,YAC9BL,EAAAC,EAAAC,cAACiE,EAAYpF,EACXiB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBACXJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WAEbT,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAb,6CACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAb,6GC3BJV,EAAW,CAAC,CAChB8C,KAAM,EACNxD,KAAM,UACNO,OAAQ,OACRmD,IAAK,+EACLO,SAAU,gFACT,CACDT,KAAM,EACNxD,KAAM,UACNO,OAAQ,OACRmD,IAAK,+EACLO,SAAU,iFAGNlE,EAAQ,CACZE,OAAQ,wCACR+C,SAAU,UACVO,gBAAe,GAAA1C,OAAMH,IAGjB4E,EAAS,CACbrF,OAAQ,wCACR+C,SAAU,UACVO,gBAAe,GAAA1C,OAAMH,GACrBU,UAAW,sBAsBEmE,EAnBS,WACtB,OACEvE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAUC,MAAM,qBAC9BL,EAAAC,EAAAC,cAACI,EAAA,EAAWvB,EACViB,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,YAIFT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACI,EAAA,EAAWgE,EACVtE,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,cC5BF2D,mLAGF,OACEpE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACExE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B7E,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAC+E,EAAD,OAEFjF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B7E,EAAAC,EAAAC,cAACgF,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAACkF,EAAD,eAdW/C,aAsBN+B","file":"static/js/113.07e566b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Icon, message, Upload} from \"antd\";\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst UploadClick = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Click\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> Click to Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadClick;\r\n","import React from \"react\";\r\nimport {Card, Icon, message, Upload} from \"antd\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJPG && isLt2M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({loading: true});\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n        imageUrl,\r\n        loading: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'}/>\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const imageUrl = this.state.imageUrl;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Avatar\">\r\n        <Upload\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\"/> : uploadButton}\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport {Button, Card, Icon, Upload} from \"antd\";\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange({file, fileList}) {\r\n    if (file.status !== 'uploading') {\r\n      console.log(file, fileList);\r\n    }\r\n  },\r\n  defaultFileList: [{\r\n    uid: 1,\r\n    name: 'xxx.png',\r\n    status: 'done',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/xxx.png',\r\n  }, {\r\n    uid: 2,\r\n    name: 'yyy.png',\r\n    status: 'done',\r\n    url: 'http://www.baidu.com/yyy.png',\r\n  }, {\r\n    uid: 3,\r\n    name: 'zzz.png',\r\n    status: 'error',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/zzz.png',\r\n  }],\r\n};\r\n\r\nconst UploadDefault = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Default\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadDefault;\r\n","import React from \"react\";\r\nimport {Card, Icon, Modal, Upload} from \"antd\";\r\n\r\nclass UploadPicture extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    }],\r\n  };\r\n\r\n  handleCancel = () => this.setState({previewVisible: false});\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({fileList}) => this.setState({fileList});\r\n\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\"/>\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Card title=\"UploadPicture\" className=\"gx-card clearfix\">\r\n        <Upload\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadPicture;\r\n","import React from \"react\";\r\nimport {Button, Card, Icon, Upload} from \"antd\";\r\n\r\nclass CompleteControl extends React.Component {\r\n  state = {\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'http://www.baidu.com/xxx.png',\r\n    }],\r\n  };\r\n  handleChange = (info) => {\r\n    let fileList = info.fileList;\r\n\r\n    // 1. Limit the number of uploaded files\r\n    //    Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    fileList = fileList.slice(-2);\r\n\r\n    // 2. read from response and show file link\r\n    fileList = fileList.map((file) => {\r\n      if (file.response) {\r\n        // Component will show file.url as link\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n\r\n    // 3. filter successfully uploaded files according to response from server\r\n    fileList = fileList.filter((file) => {\r\n      if (file.response) {\r\n        return file.response.status === 'success';\r\n      }\r\n      return true;\r\n    });\r\n\r\n    this.setState({fileList});\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      action: '//jsonplaceholder.typicode.com/posts/',\r\n      onChange: this.handleChange,\r\n      multiple: true,\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Complete Control\">\r\n        <Upload {...props} fileList={this.state.fileList}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompleteControl;\r\n","import React from \"react\";\r\nimport {Card, Icon, message, Upload} from \"antd\";\r\n\r\nconst Dragger = Upload.Dragger;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange(info) {\r\n    const status = info.file.status;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst DragDrop = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"DragDrop\">\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <Icon type=\"inbox\"/>\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n          <p className=\"ant-upload-hint\">Support for a single or bulk upload. Strictly prohibit from uploading company\r\n            data or other band files</p>\r\n        </Dragger>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default DragDrop;\r\n","import React from \"react\";\r\nimport {Button, Card, Icon, Upload} from \"antd\";\r\n\r\nconst fileList = [{\r\n  uid: -1,\r\n  name: 'xxx.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}, {\r\n  uid: -2,\r\n  name: 'yyy.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}];\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n};\r\n\r\nconst props2 = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n  className: 'upload-list-inline',\r\n};\r\n\r\nconst UploadListStyle = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Upload ListS tyle\">\r\n      <Upload {...props}>\r\n        <Button>\r\n          <Icon type=\"upload\"/> upload\r\n        </Button>\r\n      </Upload>\r\n      <br/>\r\n      <br/>\r\n      <Upload {...props2}>\r\n        <Button>\r\n          <Icon type=\"upload\"/> upload\r\n        </Button>\r\n      </Upload>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UploadListStyle;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport UploadClick from \"./UploadClick\";\r\nimport Avatar from \"./Avatar\";\r\nimport UploadDefault from \"./UploadDefault\";\r\nimport UploadPicture from \"./UploadPicture\";\r\nimport CompleteControl from \"./CompleteControl\";\r\nimport DragDrop from \"./DragDrop\";\r\nimport UploadListStyle from \"./UploadListStyle\";\r\n\r\n\r\nclass Upload extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <UploadClick/>\r\n          <Avatar/>\r\n          <UploadDefault/>\r\n          <UploadPicture/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <CompleteControl/>\r\n          <DragDrop/>\r\n          <UploadListStyle/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}