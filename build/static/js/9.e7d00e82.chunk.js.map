{"version":3,"sources":["routes/components/dataEntry/Form/Basic.js","routes/components/dataEntry/Form/HorizontalLoginForm.js","routes/components/dataEntry/Form/Registration.js","routes/components/dataEntry/Form/AdvancedSearch.js","routes/components/dataEntry/Form/DynamicFormItem.js","routes/components/dataEntry/Form/TimeRelatedControls.js","routes/components/dataEntry/Form/CustomizedFormControls.js","routes/components/dataEntry/Form/StoreFormData.js","routes/components/dataEntry/Form/CustomizedValidation.js","routes/components/dataEntry/Form/CoordinatedControls.js","routes/components/dataEntry/Form/FormLayout.js","routes/components/dataEntry/Form/DynamicRules.js","routes/components/dataEntry/Form/OtherFormControls.js","routes/components/dataEntry/Form/index.js"],"names":["FormItem","Form","Item","Basic","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","this","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","react_default","a","createElement","card","className","title","es_form","layout","onSubmit","validateStatus","help","rules","required","message","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","disabled","Object","keys","some","field","Component","WrappedNormalLoginForm","create","HorizontalLoginForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showAuthLoader","userSignIn","state","email","password","_this$props","showMessage","loader","alertMessage","HorizontalLoginForm_FormItem","valuePropName","initialValue","es_checkbox","CircularProgress","error","connect","_ref","auth","authUser","hideMessage","userFacebookSignIn","userGoogleSignIn","userGithubSignIn","userTwitterSignIn","Option","Select","AutoCompleteOption","AutoComplete","residences","value","label","children","Registration","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","concat","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","es_select","width","websiteOptions","website","key","Registration_FormItem","assign","id","validator","onBlur","tooltip","whitespace","cascader","options","addonBefore","auto_complete","dataSource","onChange","extra","row","col","RegistrationForm","AdvancedSearch","expand","handleSearch","handleReset","resetFields","toggle","count","i","push","lg","md","display","AdvancedSearch_FormItem","getFields","marginLeft","onClick","WrappedAdvancedSearch","uuid","DynamicFormItem","remove","k","length","setFieldsValue","filter","add","nextKeys","_this2","formItemLayoutWithOutLabel","formItems","index","DynamicFormItem_FormItem","validateTrigger","marginRight","WrappedDynamicFieldSet","MonthPicker","DatePicker","RangePicker","TimeRelatedControls","fieldsValue","rangeValue","rangeTimeValue","objectSpread","date-picker","format","date-time-picker","month-picker","range-picker","range-time-picker","time-picker","config","rangeConfig","TimeRelatedControls_FormItem","date_picker","showTime","time_picker","TimeRelated","PriceInput","handleNumberChange","number","parseInt","isNaN","triggerChange","handleCurrencyChange","currency","changedValue","nextProps","size","CustomizedFormControls_Option","React","CustomizedFormControls","checkPrice","CustomizedFormControls_FormItem","CustomizedFormControls_PriceInput","WrappedDemo","CustomizedForm","onFieldsChange","changedFields","mapPropsToFields","username","createFormField","onValuesChange","_","StoreFormData_FormItem","StoreFormData","fields","handleFormChange","JSON","stringify","CustomizedValidation","CustomizedValidation_FormItem","hasFeedback","defaultValue","CustomizedValidation_Option","textAlign","input_number","CoordinatedControls","handleSelectChange","note","CoordinatedControls_FormItem","CoordinatedControls_Option","WrappedApp","FormLayout","handleFormLayoutChange","formLayout","buttonItemLayout","FormLayout_FormItem","es_radio","Group","Button","formTailLayout","DynamicRules","checkNick","check","info","handleChange","checked","DynamicRules_FormItem","WrappedDynamicRule","RadioButton","Radio","RadioGroup","OtherFormControls","normFile","Array","isArray","fileList","OtherFormControls_FormItem","OtherFormControls_Option","mode","min","max","es_switch","slider","marks","0","20","40","60","80","100","rate","getValueFromEvent","upload","name","action","listType","Dragger","Form_Basic","Form_HorizontalLoginForm","Form_Registration","Form_AdvancedSearch","Form_DynamicFormItem","Form_TimeRelatedControls","Form_CustomizedFormControls","Form_StoreFormData","Form_CustomizedValidation","Form_CoordinatedControls","Form_FormLayout","Form_DynamicRules","Form_OtherFormControls"],"mappings":"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","file":"static/js/9.e7d00e82.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Icon, Input} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Basic extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // To disabled submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator, getFieldsError, getFieldError, isFieldTouched} = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\r\n    const passwordError = isFieldTouched('password') && getFieldError('password');\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            validateStatus={userNameError ? 'error' : ''}\r\n            help={userNameError || ''}>\r\n            {getFieldDecorator('userName', {\r\n              rules: [{required: true, message: 'Please input your username!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Username\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            validateStatus={passwordError ? 'error' : ''}\r\n            help={passwordError || ''}\r\n          >\r\n            {getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your Password!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                     placeholder=\"Password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    disabled={hasErrors(getFieldsError())}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(Basic);\r\n\r\n\r\nexport default WrappedNormalLoginForm;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Card, Checkbox, Form, Icon, Input, message} from \"antd\";\r\n\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGithubSignIn,\r\n  userGoogleSignIn,\r\n  userSignIn,\r\n  userTwitterSignIn\r\n} from \"appRedux/actions/Auth\";\r\nimport \"./horizontalLoginForm.less\";\r\nimport CircularProgress from \"components/CircularProgress/index\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass HorizontalLoginForm extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(\"values\", values);\r\n      if (!err) {\r\n        this.props.showAuthLoader();\r\n        this.props.userSignIn(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'demo@example.com',\r\n      password: 'demo#123'\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Horizontal Login Form\">\r\n        <Form onSubmit={this.handleSubmit} className=\"gx-login-form gx-form-row0\">\r\n          <FormItem>\r\n            {getFieldDecorator('email', {\r\n              rules: [{required: true, message: 'Please input your email!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your Password!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                     placeholder=\"Password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('remember', {\r\n              valuePropName: 'checked',\r\n              initialValue: true,\r\n            })(\r\n              <Checkbox>Remember me</Checkbox>\r\n            )}\r\n            <span className=\"gx-link login-form-forgot\">Forgot password</span>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Log in\r\n            </Button>\r\n            Or <span className=\"gx-link\">register now!</span>\r\n          </FormItem>\r\n        </Form>\r\n\r\n        {loader &&\r\n        <div className=\"gx-loader-view\">\r\n          <CircularProgress/>\r\n        </div>\r\n        }\r\n        {showMessage &&\r\n        message.error(alertMessage)}\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(HorizontalLoginForm);\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGoogleSignIn,\r\n  userGithubSignIn,\r\n  userTwitterSignIn\r\n})(WrappedNormalLoginForm);\r\n","import React, {Component} from \"react\";\r\nimport {AutoComplete, Button, Card, Cascader, Checkbox, Col, Form, Icon, Input, Row, Select, Tooltip} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [{\r\n  value: 'zhejiang',\r\n  label: 'Zhejiang',\r\n  children: [{\r\n    value: 'hangzhou',\r\n    label: 'Hangzhou',\r\n    children: [{\r\n      value: 'xihu',\r\n      label: 'West Lake',\r\n    }],\r\n  }],\r\n}, {\r\n  value: 'jiangsu',\r\n  label: 'Jiangsu',\r\n  children: [{\r\n    value: 'nanjing',\r\n    label: 'Nanjing',\r\n    children: [{\r\n      value: 'zhonghuamen',\r\n      label: 'Zhong Hua Men',\r\n    }],\r\n  }],\r\n}];\r\n\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n  }\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], {force: true});\r\n    }\r\n    callback();\r\n  }\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({autoCompleteResult});\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {autoCompleteResult} = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{width: 70}}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Registration Form\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"E-mail\"\r\n          >\r\n            {getFieldDecorator('email', {\r\n              rules: [{\r\n                type: 'email', message: 'The input is not valid E-mail!',\r\n              }, {\r\n                required: true, message: 'Please input your E-mail!',\r\n              }],\r\n            })(\r\n              <Input id=\"email1\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Password\"\r\n          >\r\n            {getFieldDecorator('password', {\r\n              rules: [{\r\n                required: true, message: 'Please input your password!',\r\n              }, {\r\n                validator: this.validateToNextPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Confirm Password\"\r\n          >\r\n            {getFieldDecorator('confirm', {\r\n              rules: [{\r\n                required: true, message: 'Please confirm your password!',\r\n              }, {\r\n                validator: this.compareToFirstPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\" onBlur={this.handleConfirmBlur}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n              Nickname&nbsp;\r\n                <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\"/>\r\n              </Tooltip>\r\n            </span>\r\n            )}\r\n          >\r\n            {getFieldDecorator('nickname', {\r\n              rules: [{required: true, message: 'Please input your nickname!', whitespace: true}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Habitual Residence\"\r\n          >\r\n            {getFieldDecorator('residence', {\r\n              initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n              rules: [{type: 'array', required: true, message: 'Please select your habitual residence!'}],\r\n            })(\r\n              <Cascader options={residences}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Phone Number\"\r\n          >\r\n            {getFieldDecorator('phone', {\r\n              rules: [{required: true, message: 'Please input your phone number!'}],\r\n            })(\r\n              <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Website\"\r\n          >\r\n            {getFieldDecorator('website', {\r\n              rules: [{required: true, message: 'Please input website!'}],\r\n            })(\r\n              <AutoComplete\r\n                dataSource={websiteOptions}\r\n                onChange={this.handleWebsiteChange}\r\n                placeholder=\"website\"\r\n              >\r\n                <Input/>\r\n              </AutoComplete>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Captcha\"\r\n            extra=\"We must make sure that your are a human.\"\r\n          >\r\n            <Row>\r\n              <Col span={24} sm={12}>\r\n                {getFieldDecorator('captcha', {\r\n                  rules: [{required: true, message: 'Please input the captcha you got!'}],\r\n                })(\r\n                  <Input/>\r\n                )}\r\n              </Col>\r\n              <Col span={24} sm={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            {getFieldDecorator('agreement', {\r\n              valuePropName: 'checked',\r\n            })(\r\n              <Checkbox>I have read the <span className=\"gx-link\">agreement</span></Checkbox>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Col, Form, Icon, Input, Row} from \"antd\";\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass AdvancedSearch extends Component {\r\n\r\n  state = {\r\n    expand: false,\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('Received values of form: ', values);\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  toggle = () => {\r\n    const {expand} = this.state;\r\n    this.setState({expand: !expand});\r\n  };\r\n\r\n  // To generate mock Form.Item\r\n  getFields() {\r\n    const count = this.state.expand ? 10 : 6;\r\n    const {getFieldDecorator} = this.props.form;\r\n    const children = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      children.push(\r\n        <Col lg={8} md={8} sm={12} xs={24} key={i} style={{display: i < count ? 'block' : 'none'}}>\r\n          <div className=\"gx-form-row0\">\r\n            <FormItem label={`Field ${i}`}>\r\n              {getFieldDecorator(`field-${i}`)(\r\n                <Input placeholder=\"placeholder\"/>\r\n              )}\r\n            </FormItem>\r\n          </div>\r\n        </Col>\r\n      );\r\n    }\r\n    return children;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Advanced Search\">\r\n        <Form\r\n          className=\"ant-advanced-search-form\"\r\n          onSubmit={this.handleSearch}\r\n        >\r\n          <Row>\r\n            {this.getFields()}\r\n            <Col span={24} className=\"gx-text-right\">\r\n              <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n              <Button style={{marginLeft: 8}} onClick={this.handleReset}>\r\n                Clear\r\n              </Button>\r\n              <span className=\"gx-link gx-btn-link gx-ml-2\" onClick={this.toggle}>\r\n                Collapse <Icon type={this.state.expand ? 'up' : 'down'}/>\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedAdvancedSearch = Form.create()(AdvancedSearch);\r\n\r\n\r\nexport default (WrappedAdvancedSearch);\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Icon, Input} from \"antd\";\r\n\r\nimport \"./dynamicFormItem.less\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nlet uuid = 0;\r\n\r\nclass DynamicFormItem extends Component {\r\n\r\n\r\n  remove = (k) => {\r\n    const {form} = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const {form} = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    const nextKeys = keys.concat(uuid);\r\n    uuid++;\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator, getFieldValue} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 4},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 20},\r\n      },\r\n    };\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: {span: 24, offset: 0},\r\n        sm: {span: 20, offset: 4},\r\n      },\r\n    };\r\n    getFieldDecorator('keys', {initialValue: []});\r\n    const keys = getFieldValue('keys');\r\n    const formItems = keys.map((k, index) => {\r\n      return (\r\n        <FormItem\r\n          {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n          label={index === 0 ? 'Passengers' : ''}\r\n          required={false}\r\n          key={k}\r\n        >\r\n          {getFieldDecorator(`names[${k}]`, {\r\n            validateTrigger: ['onChange', 'onBlur'],\r\n            rules: [{\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input passenger's name or delete this field.\",\r\n            }],\r\n          })(\r\n            <Input placeholder=\"passenger name\" style={{width: '60%', marginRight: 8}}/>\r\n          )}\r\n          {keys.length > 1 ? (\r\n            <Icon\r\n              className=\"dynamic-delete-button\"\r\n              type=\"minus-circle-o\"\r\n              disabled={keys.length === 1}\r\n              onClick={() => this.remove(k)}\r\n            />\r\n          ) : null}\r\n        </FormItem>\r\n      );\r\n    });\r\n\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Dynamic Form Item\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {formItems}\r\n          <FormItem {...formItemLayoutWithOutLabel}>\r\n            <Button type=\"dashed\" onClick={this.add} style={{width: '60%'}}>\r\n              <Icon type=\"plus\"/> Add field\r\n            </Button>\r\n          </FormItem>\r\n          <FormItem {...formItemLayoutWithOutLabel}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedDynamicFieldSet = Form.create()(DynamicFormItem);\r\n\r\n\r\nexport default WrappedDynamicFieldSet;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, DatePicker, Form, TimePicker} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst MonthPicker = DatePicker.MonthPicker;\r\nconst RangePicker = DatePicker.RangePicker;\r\n\r\n\r\nclass TimeRelatedControls extends Component {\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n\r\n      // Should format date value before submit.\r\n      const rangeValue = fieldsValue['range-picker'];\r\n      const rangeTimeValue = fieldsValue['range-time-picker'];\r\n      const values = {\r\n        ...fieldsValue,\r\n        'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\r\n        'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\r\n        'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\r\n        'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\r\n        'range-time-picker': [\r\n          rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\r\n          rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\r\n        ],\r\n        'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\r\n      };\r\n      console.log('Received values of form: ', values);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n    const config = {\r\n      rules: [{type: 'object', required: true, message: 'Please select time!'}],\r\n    };\r\n    const rangeConfig = {\r\n      rules: [{type: 'array', required: true, message: 'Please select time!'}],\r\n    };\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Time Related Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"DatePicker\"\r\n          >\r\n            {getFieldDecorator('date-picker', config)(\r\n              <DatePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"DatePicker[showTime]\"\r\n          >\r\n            {getFieldDecorator('date-time-picker', config)(\r\n              <DatePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"MonthPicker\"\r\n          >\r\n            {getFieldDecorator('month-picker', config)(\r\n              <MonthPicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"RangePicker\"\r\n          >\r\n            {getFieldDecorator('range-picker', rangeConfig)(\r\n              <RangePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"RangePicker[showTime]\"\r\n          >\r\n            {getFieldDecorator('range-time-picker', rangeConfig)(\r\n              <RangePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"TimePicker\"\r\n          >\r\n            {getFieldDecorator('time-picker', config)(\r\n              <TimePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            wrapperCol={{\r\n              xs: {span: 24, offset: 0},\r\n              sm: {span: 16, offset: 8},\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst TimeRelated = Form.create()(TimeRelatedControls);\r\n\r\nexport default TimeRelated;\r\n","import React from \"react\";\r\nimport {Button, Card, Form, Input, Select} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass PriceInput extends React.Component {\r\n  handleNumberChange = (e) => {\r\n    const number = parseInt(e.target.value || 0, 10);\r\n    if (isNaN(number)) {\r\n      return;\r\n    }\r\n    if (!('value' in this.props)) {\r\n      this.setState({number});\r\n    }\r\n    this.triggerChange({number});\r\n  }\r\n  handleCurrencyChange = (currency) => {\r\n    if (!('value' in this.props)) {\r\n      this.setState({currency});\r\n    }\r\n    this.triggerChange({currency});\r\n  }\r\n  triggerChange = (changedValue) => {\r\n    // Should provide an event to pass value to Form.\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, changedValue));\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const value = props.value || {};\r\n    this.state = {\r\n      number: value.number || 0,\r\n      currency: value.currency || 'rmb',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Should be a controlled component.\r\n    if ('value' in nextProps) {\r\n      const value = nextProps.value;\r\n      this.setState(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {size} = this.props;\r\n    const state = this.state;\r\n    return (\r\n      <span>\r\n        <Input\r\n          type=\"text\"\r\n          size={size}\r\n          value={state.number}\r\n          onChange={this.handleNumberChange}\r\n          style={{width: '63%', marginRight: '5%'}}\r\n        />\r\n        <Select\r\n          value={state.currency}\r\n          size={size}\r\n          style={{width: '32%'}}\r\n          onChange={this.handleCurrencyChange}\r\n        >\r\n          <Option value=\"rmb\">RMB</Option>\r\n          <Option value=\"dollar\">Dollar</Option>\r\n        </Select>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomizedFormControls extends React.Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  checkPrice = (rule, value, callback) => {\r\n    if (value.number > 0) {\r\n      callback();\r\n      return;\r\n    }\r\n    callback('Price must greater than zero!');\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customized Form Controls\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormItem label=\"Price\">\r\n            {getFieldDecorator('price', {\r\n              initialValue: {number: 0, currency: 'rmb'},\r\n              rules: [{validator: this.checkPrice}],\r\n            })(<PriceInput/>)}\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst WrappedDemo = Form.create()(CustomizedFormControls);\r\n\r\n\r\nexport default (WrappedDemo);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Card, Form, Input} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nconst CustomizedForm = Form.create({\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      username: Form.createFormField({\r\n        ...props.username,\r\n        value: props.username.value,\r\n      }),\r\n    };\r\n  },\r\n  onValuesChange(_, values) {\r\n    console.log(values);\r\n  },\r\n})((props) => {\r\n  const {getFieldDecorator} = props.form;\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <FormItem label=\"Username\">\r\n        {getFieldDecorator('username', {\r\n          rules: [{required: true, message: 'Username is required!'}],\r\n        })(<Input/>)}\r\n      </FormItem>\r\n    </Form>\r\n  );\r\n});\r\n\r\nclass StoreFormData extends Component {\r\n\r\n  state = {\r\n    fields: {\r\n      username: {\r\n        value: 'benjycui',\r\n      },\r\n    },\r\n  };\r\n  handleFormChange = (changedFields) => {\r\n    this.setState({\r\n      fields: {...this.state.fields, ...changedFields},\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const fields = this.state.fields;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Store Form Data\">\r\n        <CustomizedForm {...fields} onChange={this.handleFormChange}/>\r\n        <pre className=\"language-bash\">\r\n          {JSON.stringify(fields, null, 2)}\r\n        </pre>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default StoreFormData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Card, Cascader, Col, DatePicker, Form, Input, InputNumber, Select, TimePicker} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 5},\r\n  },\r\n  wrapperCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 18},\r\n    md: {span: 16},\r\n    lg: {span: 12},\r\n  },\r\n};\r\n\r\n\r\nconst CustomizedValidation = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Customized Validation\">\r\n      <Form>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Fail\"\r\n          validateStatus=\"error\"\r\n          help=\"Should be combination of numbers & alphabets\"\r\n        >\r\n          <Input placeholder=\"unavailable choice\" id=\"error\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          validateStatus=\"warning\"\r\n        >\r\n          <Input placeholder=\"Warning\" id=\"warning-1\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Validating\"\r\n          hasFeedback\r\n          validateStatus=\"validating\"\r\n          help=\"The information is being validated...\"\r\n        >\r\n          <Input placeholder=\"I'm the content is being validated\" id=\"validating\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <Input placeholder=\"I'm the content\" id=\"success\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          hasFeedback\r\n          validateStatus=\"warning\"\r\n        >\r\n          <Input placeholder=\"Warning\" id=\"warning\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Fail\"\r\n          hasFeedback\r\n          validateStatus=\"error\"\r\n          help=\"Should be combination of numbers & alphabets\"\r\n        >\r\n          <Input placeholder=\"unavailable choice\" id=\"error-1\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <DatePicker style={{width: '100%'}}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          hasFeedback\r\n          validateStatus=\"warning\"\r\n        >\r\n          <TimePicker style={{width: '100%'}}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Error\"\r\n          hasFeedback\r\n          validateStatus=\"error\"\r\n        >\r\n          <Select defaultValue=\"1\">\r\n            <Option value=\"1\">Option 1</Option>\r\n            <Option value=\"2\">Option 2</Option>\r\n            <Option value=\"3\">Option 3</Option>\r\n          </Select>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Validating\"\r\n          hasFeedback\r\n          validateStatus=\"validating\"\r\n          help=\"The information is being validated...\"\r\n        >\r\n          <Cascader defaultValue={['1']} options={[]}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          label=\"inline\"\r\n          {...formItemLayout}\r\n        >\r\n\r\n          <div className=\"ant-row gx-form-row0\">\r\n            <Col xs={24} sm={11}>\r\n              <FormItem validateStatus=\"error\" help=\"Please select the correct date\">\r\n                <DatePicker/>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xs={24} sm={2}>\r\n          <span style={{display: 'inline-block', width: '100%', textAlign: 'center'}}>\r\n            -\r\n          </span>\r\n            </Col>\r\n            <Col xs={24} sm={11}>\r\n              <FormItem>\r\n                <DatePicker/>\r\n              </FormItem>\r\n            </Col>\r\n          </div>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <InputNumber style={{width: '100%'}}/>\r\n        </FormItem>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomizedValidation;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input, Select} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass CoordinatedControls extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  handleSelectChange = (value) => {\r\n    console.log(value);\r\n    this.props.form.setFieldsValue({\r\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Coordinated Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            label=\"Note\"\r\n            labelCol={{xs: 24, sm: 5}}\r\n            wrapperCol={{xs: 24, sm: 12}}\r\n          >\r\n            {getFieldDecorator('note', {\r\n              rules: [{required: true, message: 'Please input your note!'}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Gender\"\r\n            labelCol={{xs: 24, sm: 5}}\r\n            wrapperCol={{xs: 24, sm: 12}}\r\n          >\r\n            {getFieldDecorator('gender', {\r\n              rules: [{required: true, message: 'Please select your gender!'}],\r\n            })(\r\n              <Select\r\n                placeholder=\"Select a option and change input text above\"\r\n                onChange={this.handleSelectChange}\r\n              >\r\n                <Option value=\"male\">male</Option>\r\n                <Option value=\"female\">female</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            wrapperCol={{xs: 24, sm: {span: 12, offset: 5}}}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedApp = Form.create()(CoordinatedControls);\r\n\r\n\r\nexport default (WrappedApp);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Input, Radio} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass FormLayout extends Component {\r\n\r\n  handleFormLayoutChange = (e) => {\r\n    this.setState({formLayout: e.target.value});\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {formLayout} = this.state;\r\n    const formItemLayout = formLayout === 'horizontal' ? {\r\n      labelCol: {xs: 24, sm: 6},\r\n      wrapperCol: {xs: 24, sm: 14},\r\n    } : null;\r\n    const buttonItemLayout = formLayout === 'horizontal' ? {\r\n      wrapperCol: {xs: 24, sm: {span: 14, offset: 6}},\r\n    } : null;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Form Layout\">\r\n        <Form layout={formLayout}>\r\n          <FormItem\r\n            label=\"Form Layout\"\r\n            {...formItemLayout}\r\n          >\r\n            <Radio.Group defaultValue=\"horizontal\" onChange={this.handleFormLayoutChange}>\r\n              <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>\r\n              <Radio.Button value=\"vertical\">Vertical</Radio.Button>\r\n              <Radio.Button value=\"inline\">Inline</Radio.Button>\r\n            </Radio.Group>\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Field A\"\r\n            {...formItemLayout}\r\n          >\r\n            <Input placeholder=\"input placeholder\"/>\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Field B\"\r\n            {...formItemLayout}\r\n          >\r\n            <Input placeholder=\"input placeholder\"/>\r\n          </FormItem>\r\n          <FormItem {...buttonItemLayout}>\r\n            <Button type=\"primary\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FormLayout;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Checkbox, Form, Input} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {xs: 24, sm: 6},\r\n  wrapperCol: {xs: 24, sm: 14},\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {xs: 24, sm: 6},\r\n  wrapperCol: {xs: 24, sm: {span: 14, offset: 6}},\r\n};\r\n\r\nclass DynamicRules extends Component {\r\n  state = {\r\n    checkNick: false,\r\n  };\r\n  check = () => {\r\n    this.props.form.validateFields(\r\n      (err) => {\r\n        if (!err) {\r\n          console.info('success');\r\n        }\r\n      },\r\n    );\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      checkNick: e.target.checked,\r\n    }, () => {\r\n      this.props.form.validateFields(['nickname'], {force: true});\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Dynamic Rules\">\r\n        <Form>\r\n          <FormItem {...formItemLayout} label=\"Name\">\r\n            {getFieldDecorator('username', {\r\n              rules: [{\r\n                required: true,\r\n                message: 'Please input your name',\r\n              }],\r\n            })(\r\n              <Input placeholder=\"Please input your name\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label=\"Nickname\">\r\n            {getFieldDecorator('nickname-1', {\r\n              rules: [{\r\n                required: this.state.checkNick,\r\n                message: 'Please input your nickname',\r\n              }],\r\n            })(\r\n              <Input placeholder=\"Please input your nickname\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formTailLayout}>\r\n            <Checkbox\r\n              value={this.state.checkNick}\r\n              onChange={this.handleChange}\r\n            >\r\n              Nickname is required\r\n            </Checkbox>\r\n          </FormItem>\r\n          <FormItem {...formTailLayout}>\r\n            <Button type=\"primary\" onClick={this.check}>\r\n              Check\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDynamicRule = Form.create()(DynamicRules);\r\n\r\nexport default (WrappedDynamicRule);\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Form, Icon, InputNumber, Radio, Rate, Select, Slider, Switch, Upload} from \"antd\";\r\n\r\nimport \"./otherFormControls.less\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass OtherFormControls extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n  normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {xs: 24, sm: 6},\r\n      wrapperCol: {xs: 24, sm: 14},\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Other Form Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Plain Text\"\r\n          >\r\n            <span className=\"ant-form-text\">China</span>\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Select\"\r\n            hasFeedback\r\n          >\r\n            {getFieldDecorator('select', {\r\n              rules: [\r\n                {required: true, message: 'Please select your country!'},\r\n              ],\r\n            })(\r\n              <Select placeholder=\"Please select a country\">\r\n                <Option value=\"china\">China</Option>\r\n                <Option value=\"use\">U.S.A</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Select[multiple]\"\r\n          >\r\n            {getFieldDecorator('select-multiple', {\r\n              rules: [\r\n                {required: true, message: 'Please select your favourite colors!', type: 'array'},\r\n              ],\r\n            })(\r\n              <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\r\n                <Option value=\"red\">Red</Option>\r\n                <Option value=\"green\">Green</Option>\r\n                <Option value=\"blue\">Blue</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"InputNumber\"\r\n          >\r\n            {getFieldDecorator('input-number', {initialValue: 3})(\r\n              <InputNumber min={1} max={10}/>\r\n            )}\r\n            <span className=\"ant-form-text\"> machines</span>\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Switch\"\r\n          >\r\n            {getFieldDecorator('switch', {valuePropName: 'checked'})(\r\n              <Switch/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Slider\"\r\n          >\r\n            {getFieldDecorator('slider')(\r\n              <Slider marks={{0: 'A', 20: 'B', 40: 'C', 60: 'D', 80: 'E', 100: 'F'}}/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Radio.Group\"\r\n          >\r\n            {getFieldDecorator('radio-group')(\r\n              <RadioGroup>\r\n                <Radio value=\"a\">item 1</Radio>\r\n                <Radio value=\"b\">item 2</Radio>\r\n                <Radio value=\"c\">item 3</Radio>\r\n              </RadioGroup>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Radio.Button\"\r\n          >\r\n            {getFieldDecorator('radio-button')(\r\n              <RadioGroup>\r\n                <RadioButton value=\"a\">item 1</RadioButton>\r\n                <RadioButton value=\"b\">item 2</RadioButton>\r\n                <RadioButton value=\"c\">item 3</RadioButton>\r\n              </RadioGroup>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Rate\"\r\n          >\r\n            {getFieldDecorator('rate', {\r\n              initialValue: 3.5,\r\n            })(\r\n              <Rate/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Upload\"\r\n            extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n          >\r\n            {getFieldDecorator('upload', {\r\n              valuePropName: 'fileList',\r\n              getValueFromEvent: this.normFile,\r\n            })(\r\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n                <Button>\r\n                  <Icon type=\"upload\"/> Click to upload\r\n                </Button>\r\n              </Upload>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Dragger\"\r\n          >\r\n            <div className=\"dropbox\">\r\n              {getFieldDecorator('dragger', {\r\n                valuePropName: 'fileList',\r\n                getValueFromEvent: this.normFile,\r\n              })(\r\n                <Upload.Dragger name=\"files\" action=\"/upload.do\">\r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <Icon type=\"inbox\"/>\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                  <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                </Upload.Dragger>\r\n              )}\r\n            </div>\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            wrapperCol={{xs: 24, sm: {span: 14, offset: 6}}}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDemo = Form.create()(OtherFormControls);\r\n\r\n\r\nexport default WrappedDemo;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport HorizontalLoginForm from \"./HorizontalLoginForm\";\r\nimport Registration from \"./Registration\";\r\nimport AdvancedSearch from \"./AdvancedSearch\";\r\nimport DynamicFormItem from \"./DynamicFormItem\";\r\nimport TimeRelatedControls from \"./TimeRelatedControls\";\r\nimport CustomizedFormControls from \"./CustomizedFormControls\";\r\nimport StoreFormData from \"./StoreFormData\";\r\nimport CustomizedValidation from \"./CustomizedValidation\";\r\nimport CoordinatedControls from \"./CoordinatedControls\";\r\nimport FormLayout from \"./FormLayout\";\r\nimport DynamicRules from \"./DynamicRules\";\r\nimport OtherFormControls from \"./OtherFormControls\";\r\n\r\nconst Form = () => {\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Basic/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <HorizontalLoginForm/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Registration/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <AdvancedSearch/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicFormItem/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <TimeRelatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedFormControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <StoreFormData/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedValidation/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CoordinatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <FormLayout/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicRules/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <OtherFormControls/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Form);\r\n"],"sourceRoot":""}