{"version":3,"sources":["../node_modules/isomorphic-fetch/fetch-npm-browserify.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/react-google-maps/lib/components/addons/MarkerClusterer.js","../node_modules/marker-clusterer-plus/src/markerclusterer.js"],"names":["__webpack_require__","module","exports","self","fetch","bind","r","__webpack_exports__","d","Headers","Request","Response","DOMException","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","MarkerClusterer","_MarkerClusterer$chil","_defineProperty3","_interopRequireDefault","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_markerClustererPlus2","_MapChildHelper","_constants","__esModule","default","_React$PureComponent","props","context","_this","__proto__","markerClusterer","construct","propTypes","updaterMap","setMap","MAP","state","MARKER_CLUSTERER","_ref","ANCHOR","componentDidMount","eventMap","prevProps","componentDidUpdate","repaint","componentWillUnmount","children","createElement","PureComponent","defaultAverageCenter","bool","defaultBatchSizeIE","number","defaultBatchSize","defaultCalculator","func","defaultClusterClass","string","defaultEnableRetinaIcons","defaultGridSize","defaultIgnoreHidden","defaultImageExtension","defaultImagePath","defaultImageSizes","array","defaultMaxZoom","defaultMinimumClusterSize","defaultStyles","defaultTitle","defaultZoomOnClick","averageCenter","batchSizeIE","batchSize","calculator","clusterClass","enableRetinaIcons","gridSize","ignoreHidden","imageExtension","imagePath","imageSizes","maxZoom","minimumClusterSize","styles","title","zoomOnClick","onClick","onClusteringBegin","onClusteringEnd","onMouseOut","onMouseOver","contextTypes","object","childContextTypes","instance","_averageCenter","setAverageCenter","_batchSizeIE","setBatchSizeIE","_batchSize","setBatchSize","_calculator","setCalculator","_clusterClass","setClusterClass","_enableRetinaIcons","setEnableRetinaIcons","_gridSize","setGridSize","_ignoreHidden","setIgnoreHidden","_imageExtension","setImageExtension","_imagePath","setImagePath","_imageSizes","setImageSizes","_maxZoom","setMaxZoom","_minimumClusterSize","setMinimumClusterSize","_styles","setStyles","_title","setTitle","_zoomOnClick","setZoomOnClick","ClusterIcon","cluster","getMarkerClusterer","extend","google","maps","OverlayView","cluster_","className_","getClusterClass","styles_","center_","div_","sums_","visible_","getMap","Cluster","mc","markerClusterer_","map_","gridSize_","getGridSize","minClusterSize_","getMinimumClusterSize","averageCenter_","getAverageCenter","markers_","bounds_","clusterIcon_","getStyles","opt_markers","opt_options","clusters_","listeners_","activeMap_","ready_","maxZoom_","title_","zoomOnClick_","ignoreHidden_","enableRetinaIcons_","imagePath_","IMAGE_PATH","imageExtension_","IMAGE_EXTENSION","imageSizes_","IMAGE_SIZES","calculator_","CALCULATOR","batchSize_","BATCH_SIZE","batchSizeIE_","BATCH_SIZE_IE","clusterClass_","navigator","userAgent","setupStyles_","addMarkers","onAdd","cMouseDownInCluster","cDraggingMapByCluster","cClusterIcon","document","className","show","getPanes","overlayMouseTarget","appendChild","boundsChangedListener_","event","addListener","addDomListener","theBounds","mz","trigger","getZoomOnClick","getMaxZoom","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","pos","getPosFromLatLng_","style","top","y","left","x","display","img","bp","backgroundPosition_","spriteH","parseInt","spriteV","cssText","createCss","url_","width_","height_","innerHTML","anchorText_","textColor_","textSize_","fontFamily_","fontWeight_","fontStyle_","textDecoration_","getTitle","useStyle","sums","index","Math","max","min","height","width","anchorText","anchorIcon_","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setCenter","center","latlng","getProjection","fromLatLngToDivPixel","getSize","getMarkers","getCenter","bounds","LatLngBounds","markers","getPosition","remove","addMarker","marker","mCount","isMarkerAlreadyAdded_","l","lat","lng","LatLng","calculateBounds_","isAdded","updateIcon_","isMarkerInClusterBounds","contains","getExtendedBounds","numStyles","getCalculator","cMarkerClusterer","resetViewport_","redraw_","size","fitMapToMarkers","getIgnoreHidden","getEnableRetinaIcons","getImageExtension","getImagePath","getImageSizes","getBatchSizeIE","getTotalMarkers","getClusters","getTotalClusters","opt_nodraw","pushMarkerTo_","getDraggable","removeMarker","removed","removeMarker_","removeMarkers","splice","clearMarkers","oldClusters","projection","tr","getNorthEast","bl","getSouthWest","trPix","blPix","ne","fromDivPixelToLatLng","sw","createClusters_","opt_hide","distanceBetweenPoints_","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds_","addToClosestCluster_","distance","clusterToAddTo","iFirst","mapBounds","timerRefStatic","clearTimeout","iLast","getVisible","obj1","obj2","property","apply","count","dv"],"mappings":"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","file":"static/js/26.8d30725b.chunk.js","sourcesContent":["// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\n\nmodule.exports = self.fetch.bind(self);","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob: 'FileReader' in self && 'Blob' in self && function () {\n    try {\n      new Blob();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n};\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj);\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n  var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n    return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n  };\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name);\n  }\n\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name');\n  }\n\n  return name.toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value);\n  }\n\n  return value;\n} // Build a destructive iterator for the value list\n\n\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function next() {\n      var value = items.shift();\n      return {\n        done: value === undefined,\n        value: value\n      };\n    }\n  };\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\n\nexport function Headers(headers) {\n  this.map = {};\n\n  if (headers instanceof Headers) {\n    headers.forEach(function (value, name) {\n      this.append(name, value);\n    }, this);\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function (header) {\n      this.append(header[0], header[1]);\n    }, this);\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function (name) {\n      this.append(name, headers[name]);\n    }, this);\n  }\n}\n\nHeaders.prototype.append = function (name, value) {\n  name = normalizeName(name);\n  value = normalizeValue(value);\n  var oldValue = this.map[name];\n  this.map[name] = oldValue ? oldValue + ', ' + value : value;\n};\n\nHeaders.prototype['delete'] = function (name) {\n  delete this.map[normalizeName(name)];\n};\n\nHeaders.prototype.get = function (name) {\n  name = normalizeName(name);\n  return this.has(name) ? this.map[name] : null;\n};\n\nHeaders.prototype.has = function (name) {\n  return this.map.hasOwnProperty(normalizeName(name));\n};\n\nHeaders.prototype.set = function (name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value);\n};\n\nHeaders.prototype.forEach = function (callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this);\n    }\n  }\n};\n\nHeaders.prototype.keys = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push(name);\n  });\n  return iteratorFor(items);\n};\n\nHeaders.prototype.values = function () {\n  var items = [];\n  this.forEach(function (value) {\n    items.push(value);\n  });\n  return iteratorFor(items);\n};\n\nHeaders.prototype.entries = function () {\n  var items = [];\n  this.forEach(function (value, name) {\n    items.push([name, value]);\n  });\n  return iteratorFor(items);\n};\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'));\n  }\n\n  body.bodyUsed = true;\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function (resolve, reject) {\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n\n    reader.onerror = function () {\n      reject(reader.error);\n    };\n  });\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsArrayBuffer(blob);\n  return promise;\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader();\n  var promise = fileReaderReady(reader);\n  reader.readAsText(blob);\n  return promise;\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf);\n  var chars = new Array(view.length);\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i]);\n  }\n\n  return chars.join('');\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0);\n  } else {\n    var view = new Uint8Array(buf.byteLength);\n    view.set(new Uint8Array(buf));\n    return view.buffer;\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false;\n\n  this._initBody = function (body) {\n    this._bodyInit = body;\n\n    if (!body) {\n      this._bodyText = '';\n    } else if (typeof body === 'string') {\n      this._bodyText = body;\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body;\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body;\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString();\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n      this._bodyInit = new Blob([this._bodyArrayBuffer]);\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body);\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body);\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8');\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type);\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n      }\n    }\n  };\n\n  if (support.blob) {\n    this.blob = function () {\n      var rejected = consumed(this);\n\n      if (rejected) {\n        return rejected;\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob);\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob');\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]));\n      }\n    };\n\n    this.arrayBuffer = function () {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer);\n      }\n    };\n  }\n\n  this.text = function () {\n    var rejected = consumed(this);\n\n    if (rejected) {\n      return rejected;\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob);\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text');\n    } else {\n      return Promise.resolve(this._bodyText);\n    }\n  };\n\n  if (support.formData) {\n    this.formData = function () {\n      return this.text().then(decode);\n    };\n  }\n\n  this.json = function () {\n    return this.text().then(JSON.parse);\n  };\n\n  return this;\n} // HTTP methods whose capitalization should be normalized\n\n\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase();\n  return methods.indexOf(upcased) > -1 ? upcased : method;\n}\n\nexport function Request(input, options) {\n  options = options || {};\n  var body = options.body;\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read');\n    }\n\n    this.url = input.url;\n    this.credentials = input.credentials;\n\n    if (!options.headers) {\n      this.headers = new Headers(input.headers);\n    }\n\n    this.method = input.method;\n    this.mode = input.mode;\n    this.signal = input.signal;\n\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit;\n      input.bodyUsed = true;\n    }\n  } else {\n    this.url = String(input);\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin';\n\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers);\n  }\n\n  this.method = normalizeMethod(options.method || this.method || 'GET');\n  this.mode = options.mode || this.mode || null;\n  this.signal = options.signal || this.signal;\n  this.referrer = null;\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests');\n  }\n\n  this._initBody(body);\n}\n\nRequest.prototype.clone = function () {\n  return new Request(this, {\n    body: this._bodyInit\n  });\n};\n\nfunction decode(body) {\n  var form = new FormData();\n  body.trim().split('&').forEach(function (bytes) {\n    if (bytes) {\n      var split = bytes.split('=');\n      var name = split.shift().replace(/\\+/g, ' ');\n      var value = split.join('=').replace(/\\+/g, ' ');\n      form.append(decodeURIComponent(name), decodeURIComponent(value));\n    }\n  });\n  return form;\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n    var parts = line.split(':');\n    var key = parts.shift().trim();\n\n    if (key) {\n      var value = parts.join(':').trim();\n      headers.append(key, value);\n    }\n  });\n  return headers;\n}\n\nBody.call(Request.prototype);\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {};\n  }\n\n  this.type = 'default';\n  this.status = options.status === undefined ? 200 : options.status;\n  this.ok = this.status >= 200 && this.status < 300;\n  this.statusText = 'statusText' in options ? options.statusText : 'OK';\n  this.headers = new Headers(options.headers);\n  this.url = options.url || '';\n\n  this._initBody(bodyInit);\n}\nBody.call(Response.prototype);\n\nResponse.prototype.clone = function () {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  });\n};\n\nResponse.error = function () {\n  var response = new Response(null, {\n    status: 0,\n    statusText: ''\n  });\n  response.type = 'error';\n  return response;\n};\n\nvar redirectStatuses = [301, 302, 303, 307, 308];\n\nResponse.redirect = function (url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code');\n  }\n\n  return new Response(null, {\n    status: status,\n    headers: {\n      location: url\n    }\n  });\n};\n\nexport var DOMException = self.DOMException;\n\ntry {\n  new DOMException();\n} catch (err) {\n  DOMException = function DOMException(message, name) {\n    this.message = message;\n    this.name = name;\n    var error = Error(message);\n    this.stack = error.stack;\n  };\n\n  DOMException.prototype = Object.create(Error.prototype);\n  DOMException.prototype.constructor = DOMException;\n}\n\nexport function fetch(input, init) {\n  return new Promise(function (resolve, reject) {\n    var request = new Request(input, init);\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'));\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    function abortXhr() {\n      xhr.abort();\n    }\n\n    xhr.onload = function () {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      };\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n      var body = 'response' in xhr ? xhr.response : xhr.responseText;\n      resolve(new Response(body, options));\n    };\n\n    xhr.onerror = function () {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.ontimeout = function () {\n      reject(new TypeError('Network request failed'));\n    };\n\n    xhr.onabort = function () {\n      reject(new DOMException('Aborted', 'AbortError'));\n    };\n\n    xhr.open(request.method, request.url, true);\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true;\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false;\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob';\n    }\n\n    request.headers.forEach(function (value, name) {\n      xhr.setRequestHeader(name, value);\n    });\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr);\n\n      xhr.onreadystatechange = function () {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr);\n        }\n      };\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n  });\n}\nfetch.polyfill = true;\n\nif (!self.fetch) {\n  self.fetch = fetch;\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MarkerClusterer = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _MarkerClusterer$chil;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _markerClustererPlus = require(\"marker-clusterer-plus\");\n\nvar _markerClustererPlus2 = _interopRequireDefault(_markerClustererPlus);\n\nvar _MapChildHelper = require(\"../../utils/MapChildHelper\");\n\nvar _constants = require(\"../../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A wrapper around `MarkerClusterer`\n *\n * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n */\n\n\nvar MarkerClusterer = exports.MarkerClusterer = function (_React$PureComponent) {\n  ;\n  (0, _inherits3.default)(MarkerClusterer, _React$PureComponent);\n  /*\n   * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n   */\n\n  function MarkerClusterer(props, context) {\n    ;\n    (0, _classCallCheck3.default)(this, MarkerClusterer);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (MarkerClusterer.__proto__ || (0, _getPrototypeOf2.default)(MarkerClusterer)).call(this, props, context));\n\n    var markerClusterer = new _markerClustererPlus2.default();\n    (0, _MapChildHelper.construct)(MarkerClusterer.propTypes, updaterMap, _this.props, markerClusterer);\n    markerClusterer.setMap(_this.context[_constants.MAP]);\n    _this.state = (0, _defineProperty3.default)({}, _constants.MARKER_CLUSTERER, markerClusterer);\n    return _this;\n  }\n\n  ;\n  (0, _createClass3.default)(MarkerClusterer, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var _ref;\n\n      var markerClusterer = this.state[_constants.MARKER_CLUSTERER];\n      return _ref = {}, (0, _defineProperty3.default)(_ref, _constants.ANCHOR, markerClusterer), (0, _defineProperty3.default)(_ref, _constants.MARKER_CLUSTERER, markerClusterer), _ref;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      (0, _MapChildHelper.componentDidMount)(this, this.state[_constants.MARKER_CLUSTERER], eventMap);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      ;\n      (0, _MapChildHelper.componentDidUpdate)(this, this.state[_constants.MARKER_CLUSTERER], eventMap, updaterMap, prevProps);\n\n      this.state[_constants.MARKER_CLUSTERER].repaint();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ;\n      (0, _MapChildHelper.componentWillUnmount)(this);\n      var markerClusterer = this.state[_constants.MARKER_CLUSTERER];\n\n      if (markerClusterer) {\n        markerClusterer.setMap(null);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return _react2.default.createElement(\"div\", null, children);\n    }\n  }]);\n  return MarkerClusterer;\n}(_react2.default.PureComponent);\n\nMarkerClusterer.propTypes = {\n  /**\n   * @type boolean\n   */\n  defaultAverageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultBatchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultBatchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  defaultCalculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  defaultClusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultEnableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultGridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  defaultIgnoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  defaultImageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  defaultImagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  defaultImageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  defaultMaxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultMinimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  defaultStyles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  defaultTitle: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultZoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * @type boolean\n   */\n  averageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  batchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  batchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  calculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  clusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  enableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  gridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  ignoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  imageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  imagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  imageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  maxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  minimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  styles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  title: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  zoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * function\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringBegin: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringEnd: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOut: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOver: _propTypes2.default.func\n};\nMarkerClusterer.contextTypes = (0, _defineProperty3.default)({}, _constants.MAP, _propTypes2.default.object);\nMarkerClusterer.childContextTypes = (_MarkerClusterer$chil = {}, (0, _defineProperty3.default)(_MarkerClusterer$chil, _constants.ANCHOR, _propTypes2.default.object), (0, _defineProperty3.default)(_MarkerClusterer$chil, _constants.MARKER_CLUSTERER, _propTypes2.default.object), _MarkerClusterer$chil);\nexports.default = MarkerClusterer;\nvar eventMap = {\n  onClick: \"click\",\n  onClusteringBegin: \"clusteringbegin\",\n  onClusteringEnd: \"clusteringend\",\n  onMouseOut: \"mouseout\",\n  onMouseOver: \"mouseover\"\n};\nvar updaterMap = {\n  averageCenter: function averageCenter(instance, _averageCenter) {\n    instance.setAverageCenter(_averageCenter);\n  },\n  batchSizeIE: function batchSizeIE(instance, _batchSizeIE) {\n    instance.setBatchSizeIE(_batchSizeIE);\n  },\n  batchSize: function batchSize(instance, _batchSize) {\n    instance.setBatchSize(_batchSize);\n  },\n  calculator: function calculator(instance, _calculator) {\n    instance.setCalculator(_calculator);\n  },\n  clusterClass: function clusterClass(instance, _clusterClass) {\n    instance.setClusterClass(_clusterClass);\n  },\n  enableRetinaIcons: function enableRetinaIcons(instance, _enableRetinaIcons) {\n    instance.setEnableRetinaIcons(_enableRetinaIcons);\n  },\n  gridSize: function gridSize(instance, _gridSize) {\n    instance.setGridSize(_gridSize);\n  },\n  ignoreHidden: function ignoreHidden(instance, _ignoreHidden) {\n    instance.setIgnoreHidden(_ignoreHidden);\n  },\n  imageExtension: function imageExtension(instance, _imageExtension) {\n    instance.setImageExtension(_imageExtension);\n  },\n  imagePath: function imagePath(instance, _imagePath) {\n    instance.setImagePath(_imagePath);\n  },\n  imageSizes: function imageSizes(instance, _imageSizes) {\n    instance.setImageSizes(_imageSizes);\n  },\n  maxZoom: function maxZoom(instance, _maxZoom) {\n    instance.setMaxZoom(_maxZoom);\n  },\n  minimumClusterSize: function minimumClusterSize(instance, _minimumClusterSize) {\n    instance.setMinimumClusterSize(_minimumClusterSize);\n  },\n  styles: function styles(instance, _styles) {\n    instance.setStyles(_styles);\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title);\n  },\n  zoomOnClick: function zoomOnClick(instance, _zoomOnClick) {\n    instance.setZoomOnClick(_zoomOnClick);\n  }\n};","/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n/**\n * Adds the icon to the DOM.\n */\n\n\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_); // Fix for Issue 157\n\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds); // There is a fix for Issue 170 here:\n\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds); // Don't zoom beyond the max zoom level\n\n          if (mz !== null && mc.getMap().getZoom() > mz) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      } // Prevent event propagation to the map:\n\n\n      e.cancelBubble = true;\n\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n/**\n * Removes the icon from the DOM.\n */\n\n\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n/**\n * Draws the icon.\n */\n\n\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n/**\n * Hides the icon.\n */\n\n\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n\n  this.visible_ = false;\n};\n/**\n * Positions and shows the icon.\n */\n\n\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\"; // NOTE: values must be specified in px units\n\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + -1 * spriteV + \"px, \" + (-1 * spriteH + this.width_) + \"px, \" + (-1 * spriteV + this.height_) + \"px, \" + -1 * spriteH + \"px);\";\n    }\n\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" + \"position: absolute;\" + \"top: \" + this.anchorText_[0] + \"px;\" + \"left: \" + this.anchorText_[1] + \"px;\" + \"color: \" + this.textColor_ + \";\" + \"font-size: \" + this.textSize_ + \"px;\" + \"font-family: \" + this.fontFamily_ + \";\" + \"font-weight: \" + this.fontWeight_ + \";\" + \"font-style: \" + this.fontStyle_ + \";\" + \"text-decoration: \" + this.textDecoration_ + \";\" + \"text-align: center;\" + \"width: \" + this.width_ + \"px;\" + \"line-height:\" + this.height_ + \"px;\" + \"'>\" + this.sums_.text + \"</div>\";\n\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n\n    this.div_.style.display = \"\";\n  }\n\n  this.visible_ = true;\n};\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\n\n\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\n\n\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\n\n\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\n\n\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\n\n\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\n\n\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\n\n\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\n\n\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\n\n\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\n\n\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\n\n\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  return bounds;\n};\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\n\n\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\n\n\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\n\n\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\n\n\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n/**\n * Updates the cluster icon.\n */\n\n\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\n\n\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\n\n\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n\n  this.averageCenter_ = false;\n\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n\n  this.ignoreHidden_ = false;\n\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n\n  this.enableRetinaIcons_ = false;\n\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n  this.repaint(); // Add the map event listeners\n\n  this.listeners_ = [google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n    cMarkerClusterer.resetViewport_(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n    // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n    // the map doesn't zoom out any further. In this situation, no \"idle\"\n    // event is triggered so the cluster markers that have been removed\n    // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n    if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n      google.maps.event.trigger(this, \"idle\");\n    }\n  }), google.maps.event.addListener(this.getMap(), \"idle\", function () {\n    cMarkerClusterer.redraw_();\n  })];\n};\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.onRemove = function () {\n  var i; // Put all the managed markers back on the map:\n\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  } // Remove all clusters:\n\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n\n  this.clusters_ = []; // Remove map event listeners:\n\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.draw = function () {};\n/**\n * Sets up the styles object.\n */\n\n\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\n\n\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\n\n\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\n\n\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\n\n\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\n\n\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\n\n\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\n\n\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\n\n\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\n\n\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\n\n\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\n\n\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\n\n\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\n\n\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\n\n\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\n\n\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\n\n\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\n\n\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\n\n\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\n\n\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\n\n\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\n\n\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\n\n\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\n\n\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\n\n\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\n\n\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\n\n\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\n\n\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\n\n\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\n\n\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\n\n\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\n\n\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\n\n\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\n\n\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }\n\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\n\n\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\n\n\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\n\n\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\n\n\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n\n  return true;\n};\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\n\n\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\n\n\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_(); // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n\n  setTimeout(function () {\n    var i;\n\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection(); // Turn the bounds into latlng.\n\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()); // Convert the points to pixels and the extend out by the grid size.\n\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_; // Convert the pixel points back to LatLng\n\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix); // Extend the bounds to contain the new bounds.\n\n  bounds.extend(ne);\n  bounds.extend(sw);\n  return bounds;\n};\n/**\n * Redraws all the clusters.\n */\n\n\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\n\n\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker; // Remove all the clusters\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n\n  this.clusters_ = []; // Reset the markers to not be added and to be removed from the map.\n\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\n\n\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\n\n\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\n\n\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n\n  var clusterToAddTo = null;\n\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\n\n\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n\n  if (!this.ready_) {\n    return;\n  } // Cancel previous batch processing if we're working on the first batch:\n\n\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  } // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(), this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n\n  var bounds = this.getExtendedBounds(mapBounds);\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || this.ignoreHidden_ && marker.getVisible()) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\n\n\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return function (object) {\n    var property;\n\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n\n    return this;\n  }.apply(obj1, [obj2]);\n};\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\n\n\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n  var dv = count;\n\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\n\n\nMarkerClusterer.BATCH_SIZE = 2000;\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\n\nMarkerClusterer.BATCH_SIZE_IE = 500;\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\n\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\n\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\n\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\nmodule.exports = MarkerClusterer;"],"sourceRoot":""}